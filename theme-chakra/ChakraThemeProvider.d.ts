import React, { PropsWithChildren } from 'react';
export declare const ChakraThemeProvider: ({ children }: PropsWithChildren) => React.JSX.Element;
export declare const standaloneToast: {
    (options?: import("@chakra-ui/toast/dist/toast.types-f226a101").U | undefined): import("@chakra-ui/toast/dist/toast.types-f226a101").b;
    update(id: import("@chakra-ui/toast/dist/toast.types-f226a101").b, options: Omit<import("@chakra-ui/toast/dist/toast.types-f226a101").U, "id">): void;
    promise<Result extends unknown, Err extends Error = Error>(promise: Promise<Result>, options: {
        success: {
            variant?: import("@chakra-ui/styled-system").ResponsiveValue<(string & {}) | "solid" | "subtle" | "left-accent" | "top-accent"> | undefined;
            size?: import("@chakra-ui/styled-system").ResponsiveValue<string & {}> | undefined;
            id?: import("@chakra-ui/toast/dist/toast.types-f226a101").b | undefined;
            title?: React.ReactNode;
            onCloseComplete?: (() => void) | undefined;
            colorScheme?: (string & {}) | "blue" | "cyan" | "gray" | "green" | "orange" | "pink" | "purple" | "red" | "teal" | "yellow" | "whiteAlpha" | "blackAlpha" | "linkedin" | "facebook" | "messenger" | "whatsapp" | "twitter" | "telegram" | undefined;
            orientation?: "horizontal" | "vertical" | undefined;
            styleConfig?: Record<string, any> | undefined;
            position?: import("@chakra-ui/toast/dist/toast.placement").ToastPosition | undefined;
            icon?: React.ReactNode;
            duration?: number | null | undefined;
            render?: ((props: import("@chakra-ui/toast/dist/toast.types-f226a101").R) => React.ReactNode) | undefined;
            description?: React.ReactNode;
            isClosable?: boolean | undefined;
            containerStyle?: import("@chakra-ui/styled-system").StyleProps | undefined;
        } | ((args_0: Result) => {
            variant?: import("@chakra-ui/styled-system").ResponsiveValue<(string & {}) | "solid" | "subtle" | "left-accent" | "top-accent"> | undefined;
            size?: import("@chakra-ui/styled-system").ResponsiveValue<string & {}> | undefined;
            id?: import("@chakra-ui/toast/dist/toast.types-f226a101").b | undefined;
            title?: React.ReactNode;
            onCloseComplete?: (() => void) | undefined;
            colorScheme?: (string & {}) | "blue" | "cyan" | "gray" | "green" | "orange" | "pink" | "purple" | "red" | "teal" | "yellow" | "whiteAlpha" | "blackAlpha" | "linkedin" | "facebook" | "messenger" | "whatsapp" | "twitter" | "telegram" | undefined;
            orientation?: "horizontal" | "vertical" | undefined;
            styleConfig?: Record<string, any> | undefined;
            position?: import("@chakra-ui/toast/dist/toast.placement").ToastPosition | undefined;
            icon?: React.ReactNode;
            duration?: number | null | undefined;
            render?: ((props: import("@chakra-ui/toast/dist/toast.types-f226a101").R) => React.ReactNode) | undefined;
            description?: React.ReactNode;
            isClosable?: boolean | undefined;
            containerStyle?: import("@chakra-ui/styled-system").StyleProps | undefined;
        });
        error: {
            variant?: import("@chakra-ui/styled-system").ResponsiveValue<(string & {}) | "solid" | "subtle" | "left-accent" | "top-accent"> | undefined;
            size?: import("@chakra-ui/styled-system").ResponsiveValue<string & {}> | undefined;
            id?: import("@chakra-ui/toast/dist/toast.types-f226a101").b | undefined;
            title?: React.ReactNode;
            onCloseComplete?: (() => void) | undefined;
            colorScheme?: (string & {}) | "blue" | "cyan" | "gray" | "green" | "orange" | "pink" | "purple" | "red" | "teal" | "yellow" | "whiteAlpha" | "blackAlpha" | "linkedin" | "facebook" | "messenger" | "whatsapp" | "twitter" | "telegram" | undefined;
            orientation?: "horizontal" | "vertical" | undefined;
            styleConfig?: Record<string, any> | undefined;
            position?: import("@chakra-ui/toast/dist/toast.placement").ToastPosition | undefined;
            icon?: React.ReactNode;
            duration?: number | null | undefined;
            render?: ((props: import("@chakra-ui/toast/dist/toast.types-f226a101").R) => React.ReactNode) | undefined;
            description?: React.ReactNode;
            isClosable?: boolean | undefined;
            containerStyle?: import("@chakra-ui/styled-system").StyleProps | undefined;
        } | ((args_0: Err) => {
            variant?: import("@chakra-ui/styled-system").ResponsiveValue<(string & {}) | "solid" | "subtle" | "left-accent" | "top-accent"> | undefined;
            size?: import("@chakra-ui/styled-system").ResponsiveValue<string & {}> | undefined;
            id?: import("@chakra-ui/toast/dist/toast.types-f226a101").b | undefined;
            title?: React.ReactNode;
            onCloseComplete?: (() => void) | undefined;
            colorScheme?: (string & {}) | "blue" | "cyan" | "gray" | "green" | "orange" | "pink" | "purple" | "red" | "teal" | "yellow" | "whiteAlpha" | "blackAlpha" | "linkedin" | "facebook" | "messenger" | "whatsapp" | "twitter" | "telegram" | undefined;
            orientation?: "horizontal" | "vertical" | undefined;
            styleConfig?: Record<string, any> | undefined;
            position?: import("@chakra-ui/toast/dist/toast.placement").ToastPosition | undefined;
            icon?: React.ReactNode;
            duration?: number | null | undefined;
            render?: ((props: import("@chakra-ui/toast/dist/toast.types-f226a101").R) => React.ReactNode) | undefined;
            description?: React.ReactNode;
            isClosable?: boolean | undefined;
            containerStyle?: import("@chakra-ui/styled-system").StyleProps | undefined;
        });
        loading: {
            variant?: import("@chakra-ui/styled-system").ResponsiveValue<(string & {}) | "solid" | "subtle" | "left-accent" | "top-accent"> | undefined;
            size?: import("@chakra-ui/styled-system").ResponsiveValue<string & {}> | undefined;
            id?: import("@chakra-ui/toast/dist/toast.types-f226a101").b | undefined;
            title?: React.ReactNode;
            onCloseComplete?: (() => void) | undefined;
            colorScheme?: (string & {}) | "blue" | "cyan" | "gray" | "green" | "orange" | "pink" | "purple" | "red" | "teal" | "yellow" | "whiteAlpha" | "blackAlpha" | "linkedin" | "facebook" | "messenger" | "whatsapp" | "twitter" | "telegram" | undefined;
            orientation?: "horizontal" | "vertical" | undefined;
            styleConfig?: Record<string, any> | undefined;
            position?: import("@chakra-ui/toast/dist/toast.placement").ToastPosition | undefined;
            icon?: React.ReactNode;
            duration?: number | null | undefined;
            render?: ((props: import("@chakra-ui/toast/dist/toast.types-f226a101").R) => React.ReactNode) | undefined;
            description?: React.ReactNode;
            isClosable?: boolean | undefined;
            containerStyle?: import("@chakra-ui/styled-system").StyleProps | undefined;
        };
    }): void;
    closeAll: (options?: import("@chakra-ui/toast/dist/toast.types-f226a101").c | undefined) => void;
    close: (id: import("@chakra-ui/toast/dist/toast.types-f226a101").b) => void;
    isActive: (id: import("@chakra-ui/toast/dist/toast.types-f226a101").b) => boolean;
};
