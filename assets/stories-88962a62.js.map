{"version":3,"file":"stories-88962a62.js","sources":["../../node_modules/@chakra-ui/toast/dist/chunk-ENIANY67.mjs","../../src/components/notifier/notifier.tsx","../../src/components/notifier/stories.tsx"],"sourcesContent":["import {\n  useToastOptionContext\n} from \"./chunk-SBZF3S2Z.mjs\";\nimport {\n  createToastFn\n} from \"./chunk-PE6CKLNB.mjs\";\n\n// src/use-toast.tsx\nimport { useChakra } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nfunction useToast(options) {\n  const { theme } = useChakra();\n  const defaultOptions = useToastOptionContext();\n  return useMemo(\n    () => createToastFn(theme.direction, {\n      ...defaultOptions,\n      ...options\n    }),\n    [options, theme.direction, defaultOptions]\n  );\n}\nvar use_toast_default = useToast;\n\nexport {\n  useToast,\n  use_toast_default\n};\n","import {\n  AlertStatus,\n  CreateToastFnReturn,\n  ToastId,\n  useToast,\n} from '@chakra-ui/react';\nimport React, { ReactNode, useCallback, useMemo } from 'react';\nimport { standaloneToast } from '../../theme-chakra/ChakraThemeProvider';\nimport { Notification } from './Notification';\n\nexport interface INotification {\n  /** Title of the alert. */\n  title: string | ReactNode;\n  /** Content under the title. */\n  content: string | ReactNode;\n  /** Duration in milliseconds. E.g. 5000 by default */\n  duration?: number;\n  /** Status e.g. warning, error, success */\n  status?: AlertStatus;\n  /** A unique ID that blocks other notifications with the same ID */\n  uniqueId?: ToastId;\n}\n\nconst buildNotifier =\n  (toast: CreateToastFnReturn, status: AlertStatus) =>\n  (notification: INotification) => {\n    const duration = notification.duration ?? 5000;\n    const render = ({ onClose, id }: { onClose(): void; id: ToastId }) => {\n      const duration = notification.duration ?? 5000;\n\n      const dontLetToastDisappear = () =>\n        toast.update(id, {\n          duration: 1e6,\n          render,\n        });\n\n      const letToastDisappear = () =>\n        toast.update(id, {\n          duration,\n          render,\n        });\n\n      return (\n        <Notification\n          title={notification.title}\n          content={notification.content}\n          onClose={onClose}\n          status={status}\n          onMouseEnter={dontLetToastDisappear}\n          onMouseLeave={letToastDisappear}\n        />\n      );\n    };\n\n    if (!(notification.uniqueId && toast.isActive(notification.uniqueId))) {\n      return toast({\n        position: 'top-right',\n        status,\n        duration,\n        isClosable: true,\n        render,\n        id: notification.uniqueId,\n      });\n    }\n    return null;\n  };\n\ntype Notifier = ReturnType<typeof buildNotifier>;\n\nconst createMethods = (\n  toast: CreateToastFnReturn,\n  notifyWithStatus: (status: AlertStatus) => Notifier,\n) => ({\n  success: notifyWithStatus('success'),\n  error: notifyWithStatus('error'),\n  info: notifyWithStatus('info'),\n  warning: notifyWithStatus('warning'),\n  closeAll: toast.closeAll,\n  close: toast.close,\n});\n\nexport const useNotifier = () => {\n  const toast = useToast();\n\n  const notifyWithStatus = useCallback(\n    (status: AlertStatus) => buildNotifier(toast, status),\n    [toast],\n  );\n\n  return useMemo(\n    () => createMethods(toast, notifyWithStatus),\n    [notifyWithStatus, toast],\n  );\n};\n\nexport const createNotifier = () => {\n  const notifyWithStatus = (status: AlertStatus) =>\n    buildNotifier(standaloneToast, status);\n\n  return createMethods(standaloneToast, notifyWithStatus);\n};\n","import type { Meta, StoryObj } from '@storybook/react';\nimport { userEvent, waitFor, within } from '@storybook/testing-library';\nimport { expect } from '@storybook/jest';\nimport React, { useRef } from 'react';\n\nimport { Box } from '../box';\nimport { Button } from '../button';\nimport { Flex } from '../flex';\nimport Value from '../typography/value';\nimport { INotification, createNotifier, useNotifier } from './notifier';\n\nconst meta: Meta<INotification> = {\n  title: 'Notifier',\n  args: {\n    title: 'Something happened',\n    content: 'You have to see it.',\n    duration: 5000,\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<INotification>;\n\nexport const Primary: Story = {\n  render: ({ title, content, duration }) => {\n    const notify = useNotifier();\n\n    const showSuccess = () => {\n      notify.success({\n        title: `Success: ${title}`,\n        content,\n        duration,\n      });\n    };\n\n    const showError = () => {\n      notify.error({\n        title: `Error: ${title}`,\n        content,\n        duration,\n      });\n    };\n\n    const showInfo = () => {\n      notify.info({\n        title: `Info: ${title}`,\n        content,\n        duration,\n      });\n    };\n\n    const showWarning = () => {\n      notify.warning({\n        title: `Warning: ${title}`,\n        content,\n        duration,\n      });\n    };\n\n    return (\n      <Flex flexDirection=\"column\" gap=\"20px\">\n        <Flex gap=\"20px\">\n          <Button intent=\"primary\" onClick={showSuccess}>\n            Success\n          </Button>\n          <Button intent=\"alert\" onClick={showError}>\n            Error\n          </Button>\n          <Button intent=\"secondary\" onClick={showInfo}>\n            Info\n          </Button>\n          <Button intent=\"ghost\" onClick={showWarning}>\n            Warning\n          </Button>\n        </Flex>\n        <Button intent=\"secondary\" onClick={() => notify.closeAll()}>\n          Clear all notifications\n        </Button>\n      </Flex>\n    );\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const portal = within(document.querySelector('.chakra-portal')!);\n\n    userEvent.click(canvas.getByText('Success'));\n    expect(\n      await portal.findByText('Success: Something happened'),\n    ).toBeInTheDocument();\n\n    userEvent.click(canvas.getByText('Warning'));\n    expect(\n      await portal.findByText('Warning: Something happened'),\n    ).toBeInTheDocument();\n\n    userEvent.click(canvas.getByText('Info'));\n    expect(\n      await portal.findByText('Info: Something happened'),\n    ).toBeInTheDocument();\n\n    userEvent.click(canvas.getByText('Error'));\n    expect(\n      await portal.findByText('Error: Something happened'),\n    ).toBeInTheDocument();\n\n    userEvent.click(canvas.getByText('Clear all notifications'));\n    await waitFor(() =>\n      expect(portal.queryByText('Something happened')).not.toBeInTheDocument(),\n    );\n  },\n};\n\nexport const Error: Story = {\n  args: {\n    title: 'Error happened',\n  },\n  render: (args) => {\n    const notify = useNotifier();\n\n    const another = () => {\n      notify.error({\n        title: args.title,\n        content: args.content,\n        duration: args.duration,\n      });\n    };\n\n    return (\n      <Box>\n        <Button onClick={another}>Error</Button>\n      </Box>\n    );\n  },\n};\n\nexport const Success: Story = {\n  render: (args) => {\n    const notify = useNotifier();\n    const counter = useRef(1);\n\n    const another = () => {\n      notify.success({\n        title: `${args.title} ${counter.current}`,\n        content: args.content,\n        duration: args.duration,\n      });\n\n      counter.current += 1;\n    };\n\n    return (\n      <Box>\n        <Button onClick={another}>Success</Button>\n      </Box>\n    );\n  },\n};\n\nexport const PreventDuplicateNotifications: Story = {\n  render: (args) => {\n    const notify = useNotifier();\n\n    const showRegular = () => {\n      notify.info({\n        title: `Regular: ${args.title}`,\n        content: args.content,\n        duration: args.duration,\n      });\n    };\n\n    const showPrevented = () => {\n      notify.success({\n        title: `Prevents others: ${args.title}`,\n        content: args.content,\n        duration: args.duration,\n        uniqueId: 'just one id',\n      });\n    };\n\n    return (\n      <Flex flexDirection=\"column\" gap=\"1rem\">\n        <Value fontSize=\"18px\" width=\"300px\">\n          If you pass an ID to a notifier, it is going to prevent other\n          notifications with the same ID from being shown.\n        </Value>\n        <Flex gap=\"20px\">\n          <Button onClick={showRegular}>Regular</Button>\n          <Button onClick={showPrevented}>With ID given</Button>\n        </Flex>\n      </Flex>\n    );\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const portal = within(document.querySelector('.chakra-portal')!);\n\n    userEvent.click(canvas.getByText('Regular'));\n    userEvent.click(canvas.getByText('Regular'));\n    userEvent.click(canvas.getByText('Regular'));\n    expect(\n      await portal.findAllByText('Regular: Something happened'),\n    ).toHaveLength(3);\n\n    userEvent.click(canvas.getByText('With ID given'));\n    userEvent.click(canvas.getByText('With ID given'));\n    userEvent.click(canvas.getByText('With ID given'));\n    expect(\n      await portal.findAllByText('Prevents others: Something happened'),\n    ).toHaveLength(1);\n  },\n};\n\nexport const Standalone: Story = {\n  parameters: {\n    docs: {\n      source: `huy`,\n    },\n  },\n  render: ({ title, content, duration }) => {\n    const notifier = createNotifier();\n\n    const showSuccess = () => {\n      notifier.success({\n        title: `Success: ${title}`,\n        content,\n        duration,\n      });\n    };\n\n    const showError = () => {\n      notifier.error({\n        title: `Error: ${title}`,\n        content,\n        duration,\n      });\n    };\n\n    const showInfo = () => {\n      notifier.info({\n        title: `Info: ${title}`,\n        content,\n        duration,\n      });\n    };\n\n    const showWarning = () => {\n      notifier.warning({\n        title: `Warning: ${title}`,\n        content,\n        duration,\n      });\n    };\n\n    return (\n      <Flex flexDirection=\"column\" gap=\"20px\">\n        <Value>This is for situations when you cannot use a hook.</Value>\n        <Button onClick={showSuccess}>Success</Button>\n        <Button intent=\"alert\" onClick={showError}>\n          Error\n        </Button>\n        <Button intent=\"secondary\" onClick={showInfo}>\n          Info\n        </Button>\n        <Button intent=\"ghost\" onClick={showWarning}>\n          Warning\n        </Button>\n        <Button intent=\"secondary\" onClick={() => notifier.closeAll()}>\n          Clear all notifications\n        </Button>\n      </Flex>\n    );\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const portal = within(document.querySelector('.chakra-portal')!);\n\n    userEvent.click(canvas.getByText('Success'));\n    expect(\n      await portal.findByText('Success: Something happened'),\n    ).toBeInTheDocument();\n\n    userEvent.click(canvas.getByText('Warning'));\n    expect(\n      await portal.findByText('Warning: Something happened'),\n    ).toBeInTheDocument();\n\n    userEvent.click(canvas.getByText('Info'));\n    expect(\n      await portal.findByText('Info: Something happened'),\n    ).toBeInTheDocument();\n\n    userEvent.click(canvas.getByText('Error'));\n    expect(\n      await portal.findByText('Error: Something happened'),\n    ).toBeInTheDocument();\n\n    userEvent.click(canvas.getByText('Clear all notifications'));\n    await waitFor(() =>\n      expect(portal.queryByText('Something happened')).not.toBeInTheDocument(),\n    );\n  },\n};\n"],"names":["useToast","options","theme","useChakra","defaultOptions","useToastOptionContext","useMemo","createToastFn","buildNotifier","toast","status","notification","duration","render","onClose","id","dontLetToastDisappear","letToastDisappear","jsx","Notification","createMethods","notifyWithStatus","useNotifier","useCallback","createNotifier","standaloneToast","meta","Primary","title","content","notify","jsxs","Flex","Button","canvasElement","canvas","within","portal","userEvent","expect","waitFor","Error","args","Box","Success","counter","useRef","PreventDuplicateNotifications","Value","Standalone","notifier"],"mappings":"g6CAUA,SAASA,EAASC,EAAS,CACzB,KAAM,CAAE,MAAAC,GAAUC,IACZC,EAAiBC,IACvB,OAAOC,EAAO,QACZ,IAAMC,EAAcL,EAAM,UAAW,CACnC,GAAGE,EACH,GAAGH,CACT,CAAK,EACD,CAACA,EAASC,EAAM,UAAWE,CAAc,CAC7C,CACA,CCGA,MAAMI,EACJ,CAACC,EAA4BC,IAC5BC,GAAgC,CACzB,MAAAC,EAAWD,EAAa,UAAY,IACpCE,EAAS,CAAC,CAAE,QAAAC,EAAS,GAAAC,KAA2C,CAC9DH,MAAAA,EAAWD,EAAa,UAAY,IAEpCK,EAAwB,IAC5BP,EAAM,OAAOM,EAAI,CACf,SAAU,IACV,OAAAF,CAAA,CACD,EAEGI,EAAoB,IACxBR,EAAM,OAAOM,EAAI,CACf,SAAAH,EACA,OAAAC,CAAA,CACD,EAGD,OAAAK,EAACC,EAAA,CACC,MAAOR,EAAa,MACpB,QAASA,EAAa,QACtB,QAAAG,EACA,OAAAJ,EACA,aAAcM,EACd,aAAcC,CAAA,CAAA,CAChB,EAIJ,OAAMN,EAAa,UAAYF,EAAM,SAASE,EAAa,QAAQ,EAU5D,KATEF,EAAM,CACX,SAAU,YACV,OAAAC,EACA,SAAAE,EACA,WAAY,GACZ,OAAAC,EACA,GAAIF,EAAa,QAAA,CAClB,CAGL,EAIIS,EAAgB,CACpBX,EACAY,KACI,CACJ,QAASA,EAAiB,SAAS,EACnC,MAAOA,EAAiB,OAAO,EAC/B,KAAMA,EAAiB,MAAM,EAC7B,QAASA,EAAiB,SAAS,EACnC,SAAUZ,EAAM,SAChB,MAAOA,EAAM,KACf,GAEaa,EAAc,IAAM,CAC/B,MAAMb,EAAQT,IAERqB,EAAmBE,EAAA,YACtBb,GAAwBF,EAAcC,EAAOC,CAAM,EACpD,CAACD,CAAK,CAAA,EAGD,OAAAH,EAAA,QACL,IAAMc,EAAcX,EAAOY,CAAgB,EAC3C,CAACA,EAAkBZ,CAAK,CAAA,CAE5B,EAEae,EAAiB,IAIrBJ,EAAcK,EAHKf,GACxBF,EAAciB,EAAiBf,CAAM,CAEe,ECxFlDgB,GAA4B,CAChC,MAAO,WACP,KAAM,CACJ,MAAO,qBACP,QAAS,sBACT,SAAU,GACZ,CACF,EAMaC,GAAiB,CAC5B,OAAQ,CAAC,CAAE,MAAAC,EAAO,QAAAC,EAAS,SAAAjB,KAAe,CACxC,MAAMkB,EAASR,IAkCf,OACGS,EAAAC,EAAA,CAAK,cAAc,SAAS,IAAI,OAC/B,SAAA,CAACD,EAAAC,EAAA,CAAK,IAAI,OACR,SAAA,CAAAd,EAACe,EAAO,CAAA,OAAO,UAAU,QAnCX,IAAM,CACxBH,EAAO,QAAQ,CACb,MAAO,YAAYF,IACnB,QAAAC,EACA,SAAAjB,CAAA,CACD,CAAA,EA8BkD,SAE/C,UAAA,IACCqB,EAAO,CAAA,OAAO,QAAQ,QA9BX,IAAM,CACtBH,EAAO,MAAM,CACX,MAAO,UAAUF,IACjB,QAAAC,EACA,SAAAjB,CAAA,CACD,CAAA,EAyB8C,SAE3C,QAAA,IACCqB,EAAO,CAAA,OAAO,YAAY,QAzBhB,IAAM,CACrBH,EAAO,KAAK,CACV,MAAO,SAASF,IAChB,QAAAC,EACA,SAAAjB,CAAA,CACD,CAAA,EAoBiD,SAE9C,OAAA,IACCqB,EAAO,CAAA,OAAO,QAAQ,QApBT,IAAM,CACxBH,EAAO,QAAQ,CACb,MAAO,YAAYF,IACnB,QAAAC,EACA,SAAAjB,CAAA,CACD,CAAA,EAegD,SAE7C,UAAA,CAAA,EACF,EACAM,EAACe,GAAO,OAAO,YAAY,QAAS,IAAMH,EAAO,SAAS,EAAG,SAE7D,yBAAA,CAAA,CACF,CAAA,CAAA,CAEJ,EACA,KAAM,MAAO,CAAE,cAAAI,KAAoB,CAC3B,MAAAC,EAASC,EAAOF,CAAa,EAC7BG,EAASD,EAAO,SAAS,cAAc,gBAAgB,CAAE,EAE/DE,EAAU,MAAMH,EAAO,UAAU,SAAS,CAAC,EAC3CI,EACE,MAAMF,EAAO,WAAW,6BAA6B,GACrD,kBAAkB,EAEpBC,EAAU,MAAMH,EAAO,UAAU,SAAS,CAAC,EAC3CI,EACE,MAAMF,EAAO,WAAW,6BAA6B,GACrD,kBAAkB,EAEpBC,EAAU,MAAMH,EAAO,UAAU,MAAM,CAAC,EACxCI,EACE,MAAMF,EAAO,WAAW,0BAA0B,GAClD,kBAAkB,EAEpBC,EAAU,MAAMH,EAAO,UAAU,OAAO,CAAC,EACzCI,EACE,MAAMF,EAAO,WAAW,2BAA2B,GACnD,kBAAkB,EAEpBC,EAAU,MAAMH,EAAO,UAAU,yBAAyB,CAAC,EACrD,MAAAK,EAAQ,IACZD,EAAOF,EAAO,YAAY,oBAAoB,CAAC,EAAE,IAAI,kBAAkB,CAAA,CAE3E,CACF,EAEaI,GAAe,CAC1B,KAAM,CACJ,MAAO,gBACT,EACA,OAASC,GAAS,CAChB,MAAMZ,EAASR,IAUf,SACGqB,EACC,CAAA,SAAAzB,EAACe,GAAO,QAVI,IAAM,CACpBH,EAAO,MAAM,CACX,MAAOY,EAAK,MACZ,QAASA,EAAK,QACd,SAAUA,EAAK,QAAA,CAChB,CAAA,EAK2B,gBAAK,CAAA,CACjC,CAAA,CAEJ,CACF,EAEaE,GAAiB,CAC5B,OAASF,GAAS,CAChB,MAAMZ,EAASR,IACTuB,EAAUC,SAAO,CAAC,EAYxB,SACGH,EACC,CAAA,SAAAzB,EAACe,GAAO,QAZI,IAAM,CACpBH,EAAO,QAAQ,CACb,MAAO,GAAGY,EAAK,SAASG,EAAQ,UAChC,QAASH,EAAK,QACd,SAAUA,EAAK,QAAA,CAChB,EAEDG,EAAQ,SAAW,CAAA,EAKS,kBAAO,CAAA,CACnC,CAAA,CAEJ,CACF,EAEaE,GAAuC,CAClD,OAASL,GAAS,CAChB,MAAMZ,EAASR,IAmBf,OACGS,EAAAC,EAAA,CAAK,cAAc,SAAS,IAAI,OAC/B,SAAA,CAAAd,EAAC8B,EAAM,CAAA,SAAS,OAAO,MAAM,QAAQ,SAGrC,iHAAA,EACAjB,EAACC,EAAK,CAAA,IAAI,OACR,SAAA,CAACd,EAAAe,EAAA,CAAO,QAxBM,IAAM,CACxBH,EAAO,KAAK,CACV,MAAO,YAAYY,EAAK,QACxB,QAASA,EAAK,QACd,SAAUA,EAAK,QAAA,CAChB,CAAA,EAmBiC,SAAO,UAAA,EACpCxB,EAAAe,EAAA,CAAO,QAjBQ,IAAM,CAC1BH,EAAO,QAAQ,CACb,MAAO,oBAAoBY,EAAK,QAChC,QAASA,EAAK,QACd,SAAUA,EAAK,SACf,SAAU,aAAA,CACX,CAAA,EAWmC,SAAa,gBAAA,CAAA,EAC/C,CACF,CAAA,CAAA,CAEJ,EACA,KAAM,MAAO,CAAE,cAAAR,KAAoB,CAC3B,MAAAC,EAASC,EAAOF,CAAa,EAC7BG,EAASD,EAAO,SAAS,cAAc,gBAAgB,CAAE,EAE/DE,EAAU,MAAMH,EAAO,UAAU,SAAS,CAAC,EAC3CG,EAAU,MAAMH,EAAO,UAAU,SAAS,CAAC,EAC3CG,EAAU,MAAMH,EAAO,UAAU,SAAS,CAAC,EAC3CI,EACE,MAAMF,EAAO,cAAc,6BAA6B,CAAA,EACxD,aAAa,CAAC,EAEhBC,EAAU,MAAMH,EAAO,UAAU,eAAe,CAAC,EACjDG,EAAU,MAAMH,EAAO,UAAU,eAAe,CAAC,EACjDG,EAAU,MAAMH,EAAO,UAAU,eAAe,CAAC,EACjDI,EACE,MAAMF,EAAO,cAAc,qCAAqC,CAAA,EAChE,aAAa,CAAC,CAClB,CACF,EAEaY,GAAoB,CAC/B,WAAY,CACV,KAAM,CACJ,OAAQ,KACV,CACF,EACA,OAAQ,CAAC,CAAE,MAAArB,EAAO,QAAAC,EAAS,SAAAjB,KAAe,CACxC,MAAMsC,EAAW1B,IAkCjB,OACGO,EAAAC,EAAA,CAAK,cAAc,SAAS,IAAI,OAC/B,SAAA,CAAAd,EAAC8B,GAAM,SAAkD,oDAAA,CAAA,EACxD9B,EAAAe,EAAA,CAAO,QAnCQ,IAAM,CACxBiB,EAAS,QAAQ,CACf,MAAO,YAAYtB,IACnB,QAAAC,EACA,SAAAjB,CAAA,CACD,CAAA,EA8B+B,SAAO,UAAA,IACpCqB,EAAO,CAAA,OAAO,QAAQ,QA5BT,IAAM,CACtBiB,EAAS,MAAM,CACb,MAAO,UAAUtB,IACjB,QAAAC,EACA,SAAAjB,CAAA,CACD,CAAA,EAuB4C,SAE3C,QAAA,IACCqB,EAAO,CAAA,OAAO,YAAY,QAvBd,IAAM,CACrBiB,EAAS,KAAK,CACZ,MAAO,SAAStB,IAChB,QAAAC,EACA,SAAAjB,CAAA,CACD,CAAA,EAkB+C,SAE9C,OAAA,IACCqB,EAAO,CAAA,OAAO,QAAQ,QAlBP,IAAM,CACxBiB,EAAS,QAAQ,CACf,MAAO,YAAYtB,IACnB,QAAAC,EACA,SAAAjB,CAAA,CACD,CAAA,EAa8C,SAE7C,UAAA,EACAM,EAACe,GAAO,OAAO,YAAY,QAAS,IAAMiB,EAAS,SAAS,EAAG,SAE/D,yBAAA,CAAA,CACF,CAAA,CAAA,CAEJ,EACA,KAAM,MAAO,CAAE,cAAAhB,KAAoB,CAC3B,MAAAC,EAASC,EAAOF,CAAa,EAC7BG,EAASD,EAAO,SAAS,cAAc,gBAAgB,CAAE,EAE/DE,EAAU,MAAMH,EAAO,UAAU,SAAS,CAAC,EAC3CI,EACE,MAAMF,EAAO,WAAW,6BAA6B,GACrD,kBAAkB,EAEpBC,EAAU,MAAMH,EAAO,UAAU,SAAS,CAAC,EAC3CI,EACE,MAAMF,EAAO,WAAW,6BAA6B,GACrD,kBAAkB,EAEpBC,EAAU,MAAMH,EAAO,UAAU,MAAM,CAAC,EACxCI,EACE,MAAMF,EAAO,WAAW,0BAA0B,GAClD,kBAAkB,EAEpBC,EAAU,MAAMH,EAAO,UAAU,OAAO,CAAC,EACzCI,EACE,MAAMF,EAAO,WAAW,2BAA2B,GACnD,kBAAkB,EAEpBC,EAAU,MAAMH,EAAO,UAAU,yBAAyB,CAAC,EACrD,MAAAK,EAAQ,IACZD,EAAOF,EAAO,YAAY,oBAAoB,CAAC,EAAE,IAAI,kBAAkB,CAAA,CAE3E,CACF","x_google_ignoreList":[0]}