{"version":3,"file":"compact-button-05fe791b.js","sources":["../../src/components/compact-button/styles.ts","../../src/components/compact-button/compact-button.tsx"],"sourcesContent":["export default {\n  default: {\n    border: '1px solid',\n    borderColor: 'grayShade3',\n    borderRadius: '2px',\n    backgroundColor: 'grayShade3',\n    cursor: 'pointer',\n    boxShadow: 'none',\n    color: 'black',\n    lineHeight: '15px',\n    fontSize: '12px',\n    fontWeight: 'bold',\n    fontFamily: 'Inter',\n    py: '4px',\n    px: '6px',\n\n    ':hover': {\n      backgroundColor: 'grayShade3',\n      borderColor: 'grayShade1',\n    },\n\n    span: {\n      width: '4px',\n      height: '4px',\n      borderRadius: '50%',\n      backgroundColor: 'gray',\n\n      '&[data-active=\"true\"]': {\n        backgroundColor: 'primary',\n      },\n    },\n  },\n  highlight: {\n    backgroundColor: 'primaryShade2',\n    borderColor: 'primaryShade2',\n\n    ':hover': {\n      backgroundColor: 'primaryShade2',\n      borderColor: 'primary',\n    },\n  },\n  flex: {\n    gap: '4px',\n  },\n};\n","import React, { FC, memo, CSSProperties } from 'react';\nimport { Button, ButtonProps, Flex, Box } from 'rebass';\nimport { GetIcon, IconName } from '../icon';\n\nimport styles from './styles';\n\ntype Indicator = 'vertical' | 'horizontal';\ntype LinkRelatedProps = Pick<Props, 'href' | 'newTab'>;\n\nexport interface Props extends Omit<ButtonProps, 'css'> {\n  newTab?: boolean;\n  isActive?: boolean;\n  icon?: IconName;\n  indicator?: Indicator;\n  mode?: 'default' | 'highlight';\n}\n\nconst flexDirections: Record<Indicator, CSSProperties['flexDirection']> = {\n  horizontal: 'row',\n  vertical: 'column-reverse',\n};\n\nconst getLinkProps = ({ href, newTab }: LinkRelatedProps): Partial<Props> =>\n  href\n    ? {\n        href,\n        as: 'a',\n        rel: 'noreferrer',\n        target: newTab ? '_blank' : '_self',\n      }\n    : {};\n\nconst CompactButton: FC<Props> = ({\n  icon,\n  href,\n  children,\n  isActive,\n  indicator,\n  sx = {},\n  newTab = false,\n  mode = 'default',\n  ...props\n}) => (\n  <Button\n    {...props}\n    {...getLinkProps({ newTab, href })}\n    sx={{ ...styles.default, ...styles[mode], ...sx }}\n  >\n    <Flex\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      sx={styles.flex}\n      flexDirection={flexDirections[indicator ?? 'horizontal']}\n    >\n      {!!icon && <GetIcon icon={icon} size=\"xs\" />}\n      {indicator && !icon && <span data-active={isActive} />}\n\n      <Box>{children}</Box>\n    </Flex>\n  </Button>\n);\n\nexport default memo(CompactButton);\n"],"names":["styles","flexDirections","getLinkProps","href","newTab","CompactButton","icon","children","isActive","indicator","sx","mode","props","jsx","Button","jsxs","Flex","GetIcon","Box","CompactButton$1","memo"],"mappings":"sLAAA,MAAeA,EAAA,CACb,QAAS,CACP,OAAQ,YACR,YAAa,aACb,aAAc,MACd,gBAAiB,aACjB,OAAQ,UACR,UAAW,OACX,MAAO,QACP,WAAY,OACZ,SAAU,OACV,WAAY,OACZ,WAAY,QACZ,GAAI,MACJ,GAAI,MAEJ,SAAU,CACR,gBAAiB,aACjB,YAAa,YACf,EAEA,KAAM,CACJ,MAAO,MACP,OAAQ,MACR,aAAc,MACd,gBAAiB,OAEjB,wBAAyB,CACvB,gBAAiB,SACnB,CACF,CACF,EACA,UAAW,CACT,gBAAiB,gBACjB,YAAa,gBAEb,SAAU,CACR,gBAAiB,gBACjB,YAAa,SACf,CACF,EACA,KAAM,CACJ,IAAK,KACP,CACF,EC3BAC,EAAA,CAA0E,WAAA,MAC5D,SAAA,gBAEd,EAEAC,EAAA,CAAA,CAAA,KAAAC,EAAA,OAAAC,CAAA,IAAAD,EAAA,CAEM,KAAAA,EACE,GAAA,IACI,IAAA,aACC,OAAAC,EAAA,SAAA,OAEP,EAAA,GAGNC,EAAA,CAAA,CAAkC,KAAAC,EAChC,KAAAH,EACA,SAAAI,EACA,SAAAC,EACA,UAAAC,EACA,GAAAC,EAAA,CAAA,EACM,OAAAN,EAAA,GACG,KAAAO,EAAA,UACF,GAAAC,CAET,IAAAC,EACEC,EAAC,CAAA,GAAAF,EACK,GAAAV,EAAA,CAAA,OAAAE,EAAA,KAAAD,EAAA,EAC6B,GAAA,CAAA,GAAAH,EAAA,QAAA,GAAAA,EAAAW,CAAA,EAAA,GAAAD,CAAA,EACe,SAAAK,EAEhDC,EAAC,CAAA,WAAA,SACY,eAAA,SACI,GAAAhB,EAAA,KACJ,cAAAC,EAAAQ,GAAA,YAAA,EAC4C,SAAA,CAEtD,CAAA,CAAAH,GAAAO,EAAAI,EAAA,CAAA,KAAAX,EAAA,KAAA,KAAA,EAAyCG,GAAA,CAAAH,GAAAO,EAAA,OAAA,CAAA,cAAAL,EAAA,EACUK,EAAAK,EAAA,CAAA,SAAAX,EAAA,CAErC,CAAA,CAAA,CACjB,CACF,EAGFY,EAAAC,EAAA,KAAAf,CAAA"}