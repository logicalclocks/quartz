{"version":3,"file":"stories-20b3df1b.js","sources":["../../src/components/popup/tiny/stories.tsx"],"sourcesContent":["import { action } from '@storybook/addon-actions';\nimport type { Meta, StoryObj } from '@storybook/react';\n\nimport { Button, Input, usePopup } from '../../..';\nimport TinyPopup from '.';\nimport { reusableArgs } from '../storyUitls';\n\nconst meta: Meta<typeof TinyPopup> = {\n  title: 'TinyPopup',\n};\nexport default meta;\n\ntype Story = StoryObj<typeof TinyPopup>;\n\nexport const PopupTiny: Story = {\n  args: {\n    title: 'Title',\n    secondaryText: 'Secondary text',\n    withCloseButton: true,\n\n    mainButtonProps: {\n      children: 'main',\n      onClick: action('main'),\n      isLoading: true,\n    },\n    secondaryButtonProps: {\n      children: 'secondary',\n      onClick: action('secondary'),\n    },\n    ...reusableArgs,\n  },\n  render: (props) => {\n    const [isOpen, handleToggle] = usePopup();\n\n    return (\n      <>\n        <Button onClick={handleToggle}>Open Tiny popup</Button>\n        <TinyPopup {...props} onClose={handleToggle} isOpen={isOpen}>\n          <Input label=\"Value\" />\n        </TinyPopup>\n      </>\n    );\n  },\n};\n"],"names":["meta","PopupTiny","action","reusableArgs","props","isOpen","handleToggle","usePopup","jsxs","Fragment","jsx","Button","TinyPopup","Input"],"mappings":"itGAOA,MAAMA,GAA+B,CACnC,MAAO,WACT,EAKaC,GAAmB,CAC9B,KAAM,CACJ,MAAO,QACP,cAAe,iBACf,gBAAiB,GAEjB,gBAAiB,CACf,SAAU,OACV,QAASC,EAAO,MAAM,EACtB,UAAW,EACb,EACA,qBAAsB,CACpB,SAAU,YACV,QAASA,EAAO,WAAW,CAC7B,EACA,GAAGC,CACL,EACA,OAASC,GAAU,CACjB,KAAM,CAACC,EAAQC,CAAY,EAAIC,EAAS,EAExC,OAEIC,EAAA,KAAAC,WAAA,CAAA,SAAA,CAACC,EAAA,IAAAC,EAAA,CAAO,QAASL,EAAc,SAAe,kBAAA,EAC9CI,EAAAA,IAACE,EAAW,CAAA,GAAGR,EAAO,QAASE,EAAc,OAAAD,EAC3C,SAACK,EAAAA,IAAAG,EAAA,CAAM,MAAM,OAAA,CAAQ,CACvB,CAAA,CACF,CAAA,CAAA,CAEJ,CACF"}