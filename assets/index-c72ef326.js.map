{"version":3,"file":"index-c72ef326.js","sources":["../../src/components/row/container/types.ts","../../src/components/row/item/row-item.styles.ts","../../src/components/row/item/types.ts","../../src/components/row/item/index.tsx","../../src/components/row/group/row-group.styles.ts","../../src/components/row/group/index.tsx","../../src/components/row/container/container.styles.ts","../../src/components/row/container/index.tsx"],"sourcesContent":["export enum Mode {\n  full = 'full',\n  tiny = 'tiny',\n}\n","import { ITableItemStyles } from './types';\nimport { Mode } from '../container/types';\n\nexport default function ({ position, mode, fillSpace }: ITableItemStyles) {\n  return {\n    width: fillSpace ? '100%' : 'auto',\n    textAlign: position,\n    py: mode === Mode.full ? '12px' : '8px',\n    px: mode === Mode.full ? '20px' : '4px',\n    ':first-of-type': { pl: '8px' },\n    ':last-of-type': { pr: '8px' },\n  };\n}\n","import { Mode } from '../container/types';\n\nexport enum TableItemPosition {\n  left = 'left',\n  right = 'right',\n}\n\nexport interface ITableItemStyles {\n  position: TableItemPosition;\n  mode: Mode;\n  fillSpace: boolean;\n}\n","import React, { FC, ComponentType } from 'react';\nimport { Box } from 'rebass';\nimport styles from './row-item.styles';\nimport { TableItemPosition } from './types';\nimport { Mode } from '../container/types';\n\nexport interface RowItemProps {\n  mode?: Mode;\n  component: ComponentType<any>;\n  componentProps: any;\n  position?: TableItemPosition;\n  fillSpace?: boolean;\n}\n\nconst RowItem: FC<RowItemProps> = ({\n  mode = Mode.full,\n  component: Component,\n  componentProps,\n  position = TableItemPosition.left,\n  fillSpace = false,\n  ...props\n}: RowItemProps) => (\n  <Box as=\"td\" sx={styles({ position, mode, fillSpace })} {...props}>\n    <Component {...componentProps} />\n  </Box>\n);\nexport default RowItem;\n","import { Mode } from '../container/types';\n\nenum BorderSides {\n  left = 'Left',\n  right = 'Right',\n  top = 'Top',\n  bottom = 'Bottom',\n}\n\nfunction createBorder(side: BorderSides): { [key: string]: string } {\n  return {\n    [`border${side}Style`]: 'solid',\n    [`border${side}Width`]: '1px',\n    [`border${side}Color`]: 'grayShade2',\n  };\n}\n\nexport default ({ mode }: any) => ({\n  ...createBorder(BorderSides.top),\n  ...createBorder(BorderSides.bottom),\n  ...(mode === Mode.tiny && {\n    ...createBorder(BorderSides.left),\n    ...createBorder(BorderSides.right),\n  }),\n\n  ':hover': {\n    bg: 'grayShade3',\n  },\n});\n","import React, { ComponentType, FC, useMemo } from 'react';\nimport { Box } from 'rebass';\nimport TableItem from '../item';\nimport styles from './row-group.styles';\nimport { Mode } from '../container/types';\nimport { TableItemPosition } from '../item/types';\n\nconst getPosition = (mc: number, key: number): TableItemPosition =>\n  key <= mc ? TableItemPosition.left : TableItemPosition.right;\nexport interface RowGroupProps {\n  mode?: Mode;\n  components: ComponentType<any>[];\n  componentsProps: any[];\n  middleColumn: number;\n  onRowClick?: (event: any, index: number) => void;\n  index: number;\n}\n\nconst RowGroup: FC<RowGroupProps> = ({\n  mode = Mode.full,\n  components,\n  componentsProps,\n  middleColumn,\n  onRowClick,\n  index,\n  ...props\n}: RowGroupProps) => {\n  const keys = useMemo(\n    () => Object.keys(Array.from({ length: components.length })),\n    [components],\n  );\n\n  return (\n    <Box\n      onClick={(e) => onRowClick && onRowClick(e, index)}\n      as=\"tr\"\n      {...props}\n      sx={styles({ mode })}\n      width=\"100%\"\n    >\n      {components.map((component, index) => (\n        <TableItem\n          key={keys[index]}\n          mode={mode}\n          component={component}\n          componentProps={componentsProps[index] || {}}\n          position={getPosition(middleColumn, index)}\n          fillSpace={middleColumn === index}\n        />\n      ))}\n    </Box>\n  );\n};\nexport default RowGroup;\n","export default {\n  tableLayout: 'auto',\n  borderCollapse: 'collapse',\n  width: '100%',\n};\n","import React, { ComponentType, FC, useMemo } from 'react';\nimport { Box } from 'rebass';\nimport TableRow from '../group';\nimport { Mode } from './types';\nimport styles from './container.styles';\nimport Labeling from '../../typography/labeling';\nimport rowStyles from '../item/row-item.styles';\nimport { TableItemPosition } from '../item/types';\n\nexport interface RowProps {\n  mode?: Mode;\n  groupComponents: ComponentType<any>[][];\n  groupProps: Record<string, any>[][];\n  middleColumn: number;\n  legend?: String[];\n  onRowClick?: (event: any, index: number) => void;\n}\n\nconst Row: FC<RowProps> = ({\n  mode = Mode.full,\n  groupComponents,\n  groupProps,\n  legend,\n  middleColumn,\n  onRowClick,\n  ...props\n}: RowProps) => {\n  const keys = useMemo(\n    () => Object.keys(Array.from({ length: groupComponents.length })),\n    [groupComponents],\n  );\n\n  return (\n    <Box as=\"table\" sx={styles} {...props}>\n      <Box as=\"tbody\">\n        {!!legend && (\n          <Box as=\"tr\" width=\"100%\">\n            {legend.map((name, index) => (\n              <Labeling\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${name}${index}`}\n                sx={rowStyles({\n                  position: TableItemPosition.left,\n                  mode,\n                  fillSpace: false,\n                })}\n                gray\n                pb=\"4px\"\n                as=\"td\"\n              >\n                {name}\n              </Labeling>\n            ))}\n          </Box>\n        )}\n        {groupComponents.map((row, index) => (\n          <TableRow\n            index={index}\n            onRowClick={onRowClick}\n            key={keys[index]}\n            mode={mode}\n            components={row}\n            componentsProps={groupProps[index]}\n            middleColumn={middleColumn}\n          />\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Row;\n"],"names":["Mode","rowStyles","position","mode","fillSpace","TableItemPosition","RowItem","Component","componentProps","props","jsx","Box","styles","createBorder","side","styles$1","getPosition","mc","key","RowGroup","components","componentsProps","middleColumn","onRowClick","index","keys","useMemo","e","component","index2","TableItem","Row","groupComponents","groupProps","legend","jsxs","name","Labeling","row","TableRow"],"mappings":"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"}