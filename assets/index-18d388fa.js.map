{"version":3,"file":"index-18d388fa.js","sources":["../../src/components/sticky-summary/sticky-summary.styles.ts","../../src/components/typography/title.tsx","../../src/components/sticky-summary/index.tsx"],"sourcesContent":["export const boxStyles = {\n  alignItems: 'center',\n  gap: '8px',\n};\n\nexport const boxButtonStyles = {\n  justifyContent: 'space-between',\n  alignItems: 'center',\n};\n","import React, { FC } from 'react';\nimport { Text, TextProps } from 'rebass';\n\nexport interface TitleProps extends Omit<TextProps, 'css'> {\n  uppercase?: boolean;\n}\n\nconst Title: FC<TitleProps> = ({ uppercase = false, ...props }: TitleProps) => (\n  <Text\n    {...props}\n    as=\"h1\"\n    variant=\"title\"\n    sx={{\n      ...(uppercase && { textTransform: 'uppercase' }),\n      wordWrap: 'normal',\n      ...props.sx,\n    }}\n  />\n);\nexport default Title;\n","import React, { FC } from 'react';\nimport { boxStyles, boxButtonStyles } from './sticky-summary.styles';\nimport Title from '../typography/title';\nimport Labeling from '../typography/labeling';\nimport FormSummaryContainer from '../form-summary-container';\nimport { Badge } from '../badge';\nimport { Flex } from '../flex';\nimport { Box } from '../box';\n\nexport interface StickySummaryProps {\n  title?: string;\n  firstValue?: string;\n  secondValue?: string;\n  mainButton: React.ReactNode;\n  secondaryButton?: React.ReactNode;\n  errorsValue?: string;\n  hasScrollOnScreen?: boolean;\n}\n\nconst StickySummary: FC<StickySummaryProps> = ({\n  title,\n  firstValue,\n  secondValue,\n  mainButton,\n  secondaryButton,\n  hasScrollOnScreen = true,\n  errorsValue,\n  ...props\n}: StickySummaryProps) => (\n  <FormSummaryContainer hasScrollOnScreen={hasScrollOnScreen} {...props}>\n    <Flex sx={{ ...boxStyles }}>\n      {title && (\n        <Title uppercase sx={{ textTransform: 'normal' }}>\n          {title}\n        </Title>\n      )}\n      {errorsValue && <Badge variant=\"fail\" value={errorsValue} />}\n      {firstValue && !errorsValue && (\n        <Labeling gray bold>\n          {firstValue}\n        </Labeling>\n      )}\n      {secondValue && !errorsValue && (\n        <Labeling gray bold>\n          {secondValue}\n        </Labeling>\n      )}\n    </Flex>\n    <Flex sx={{ ...boxButtonStyles }}>\n      {secondaryButton && <Box>{secondaryButton}</Box>}\n      <Box ml=\"20px\">{mainButton}</Box>\n    </Flex>\n  </FormSummaryContainer>\n);\n\nexport default StickySummary;\n"],"names":["boxStyles","boxButtonStyles","Title","uppercase","props","jsx","Text","StickySummary","title","firstValue","secondValue","mainButton","secondaryButton","hasScrollOnScreen","errorsValue","jsxs","FormSummaryContainer","Flex","Badge","Labeling","Box"],"mappings":"oQAAO,MAAMA,EAAY,CACvB,WAAY,SACZ,IAAK,KACP,EAEaC,EAAkB,CAC7B,eAAgB,gBAChB,WAAY,QACd,ECDAC,EAAA,CAAA,CAAA,UAAAC,EAAA,GAAA,GAAAC,CAAA,IAAAC,EACEC,EAAC,CAAA,GAAAF,EACK,GAAA,KACD,QAAA,QACK,GAAA,CACJ,GAAAD,GAAA,CAAA,cAAA,WAAA,EAC4C,SAAA,SACpC,GAAAC,EAAA,EACD,CACX,CACF,kNCEF,MAAAG,EAAA,CAAA,CAA+C,MAAAC,EAC7C,WAAAC,EACA,YAAAC,EACA,WAAAC,EACA,gBAAAC,EACA,kBAAAC,EAAA,GACoB,YAAAC,EACpB,GAAAV,CAEF,IAAAW,EAAAC,EAAA,CAAA,kBAAAH,EAAA,GAAAT,EAAA,SAAA,CAEIW,EAAAE,EAAA,CAAA,GAAA,CAAA,GAAAjB,CAAA,EAAA,SAAA,CACGQ,GAAAH,EAAAH,EAAA,CAAA,UAAA,GAAA,GAAA,CAAA,cAAA,QAAA,EAAA,SAAAM,CAAA,CAAA,EAGCM,GAAAT,EAAAa,EAAA,CAAA,QAAA,OAAA,MAAAJ,EAAA,EAEwDL,GAAA,CAAAK,GAAAT,EAAAc,EAAA,CAAA,KAAA,GAAA,KAAA,GAAA,SAAAV,CAAA,CAAA,EAIxDC,GAAA,CAAAI,GAAAT,EAAAc,EAAA,CAAA,KAAA,GAAA,KAAA,GAAA,SAAAT,CAAA,CAAA,CAKA,EAAA,EAEJK,EAAAE,EAAA,CAAA,GAAA,CAAA,GAAAhB,CAAA,EAAA,SAAA,CAEGW,GAAAP,EAAAe,EAAA,CAAA,SAAAR,CAAA,CAAA,EAAyCP,EAAAe,EAAA,CAAA,GAAA,OAAA,SAAAT,EAAA,CACf,EAAA,CAC7B,EAAA"}