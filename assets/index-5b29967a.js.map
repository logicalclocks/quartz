{"version":3,"file":"index-5b29967a.js","sources":["../../src/components/list/container/index.tsx","../../src/components/list/item/list-item.styles.ts","../../src/components/list/item/index.tsx"],"sourcesContent":["import { forwardRef } from 'react';\nimport { Box, BoxProps } from 'rebass';\n\nexport interface ListProps extends Omit<BoxProps, 'css'> {\n  children: React.ReactNode;\n}\n\nconst List = forwardRef<HTMLUListElement, ListProps>(\n  ({ children, ...props }: ListProps, ref: React.Ref<HTMLUListElement>) => (\n    <Box\n      ref={ref}\n      as=\"ul\"\n      m=\"0\"\n      p=\"0\"\n      width=\"max-content\"\n      overflowY=\"auto\"\n      {...props}\n      tx=\"variants.list\"\n      variant=\"container\"\n      color=\"black\"\n    >\n      {children}\n    </Box>\n  ),\n);\n\nexport default List;\n","import { SxStyleProp } from 'rebass';\n\nexport const withoutBorder = { borderBottomColor: 'transparent' };\n\nexport default (isActive: boolean, disablde?: boolean): SxStyleProp => ({\n  height: '35px',\n\n  bg: isActive ? 'grayShade3' : 'inherit',\n  color: disablde ? 'gray' : 'inherit',\n\n  display: 'flex',\n  alignItems: 'center',\n\n  boxSizing: 'border-box',\n\n  transition: 'all 0.25s ease',\n\n  listStyleType: 'none',\n\n  borderBottomStyle: 'solid',\n  borderBottomWidth: '1px',\n\n  '> svg': {\n    pr: '7px',\n  },\n\n  '> button:last-of-type': {\n    visibility: 'hidden',\n  },\n\n  '> div': {\n    minWidth: 28,\n  },\n\n  ':hover > button:last-of-type': {\n    visibility: 'visible',\n  },\n});\n","import { memo } from 'react';\nimport { Box, BoxProps } from 'rebass';\n\nimport { Button } from '../../button';\nimport styles, { withoutBorder } from './list-item.styles';\n\nexport interface ListItemProps extends Omit<BoxProps, 'css' | 'action'> {\n  children: React.ReactNode;\n  variant?: 'primary' | 'active';\n  hasDivider?: boolean;\n  isRightAlignment?: boolean;\n  action?: [string, (event: React.MouseEvent<HTMLButtonElement>) => void];\n  isActive?: boolean;\n}\n\nconst ListItem = ({\n  children,\n  variant = 'primary',\n  hasDivider,\n  action,\n  isActive = false,\n  isRightAlignment,\n  disabled,\n  onClick,\n  sx = {},\n  ...props\n}: ListItemProps) => {\n  const [actionTitle, actionCallback] = action || [];\n\n  return (\n    <Box\n      p=\"10px\"\n      as=\"li\"\n      tx=\"variants.list.item\"\n      variant={variant}\n      onClick={disabled ? undefined : onClick}\n      sx={{ ...styles(isActive, disabled), ...sx }}\n      {...props}\n      css={!hasDivider ? withoutBorder : undefined}\n    >\n      {children}\n      {action && (\n        <Button\n          ml=\"auto\"\n          intent=\"inline\"\n          p=\"0 0 0 10px\"\n          onClick={actionCallback}\n        >\n          {actionTitle}\n        </Button>\n      )}\n    </Box>\n  );\n};\n\nexport default memo(ListItem);\n"],"names":["List","forwardRef","children","props","ref","jsx","Box","withoutBorder","styles","isActive","disablde","ListItem","variant","hasDivider","action","isRightAlignment","disabled","onClick","sx","actionTitle","actionCallback","jsxs","Button","ListItem$1","memo"],"mappings":"gKAOA,MAAAA,EAAAC,EAAA,WAAa,CAAA,CAAA,SAAAC,EAAA,GAAAC,CAAA,EAAAC,IAAAC,EAAA,IAETC,EAAC,CAAA,IAAAF,EACC,GAAA,KACG,EAAA,IACD,EAAA,IACA,MAAA,cACI,UAAA,OACI,GAAAD,EACN,GAAA,gBACD,QAAA,YACK,MAAA,QACF,SAAAD,CAEL,CAAA,CAGP,wHCtBa,MAAAK,EAAgB,CAAE,kBAAmB,eAElDC,EAAe,CAACC,EAAmBC,KAAqC,CACtE,OAAQ,OAER,GAAID,EAAW,aAAe,UAC9B,MAAOC,EAAW,OAAS,UAE3B,QAAS,OACT,WAAY,SAEZ,UAAW,aAEX,WAAY,iBAEZ,cAAe,OAEf,kBAAmB,QACnB,kBAAmB,MAEnB,QAAS,CACP,GAAI,KACN,EAEA,wBAAyB,CACvB,WAAY,QACd,EAEA,QAAS,CACP,SAAU,EACZ,EAEA,+BAAgC,CAC9B,WAAY,SACd,CACF,GCtBAC,EAAA,CAAA,CAAkB,SAAAT,EAChB,QAAAU,EAAA,UACU,WAAAC,EACV,OAAAC,EACA,SAAAL,EAAA,GACW,iBAAAM,EACX,SAAAC,EACA,QAAAC,EACA,GAAAC,EAAA,CAAA,EACM,GAAAf,CAER,IAAA,CACE,KAAA,CAAAgB,EAAAC,CAAA,EAAAN,GAAA,CAAA,EAEA,OAAAO,EAAA,KACEf,EAAC,CAAA,EAAA,OACG,GAAA,KACC,GAAA,qBACA,QAAAM,EACH,QAAAI,EAAA,OAAAC,EACgC,GAAA,CAAA,GAAAT,EAAAC,EAAAO,CAAA,EAAA,GAAAE,CAAA,EACW,GAAAf,EACvC,IAAAU,EAAA,OAAAN,EAC+B,SAAA,CAElCL,EAAAY,GAAAT,EAAA,IAECiB,EAAC,CAAA,GAAA,OACI,OAAA,SACI,EAAA,aACL,QAAAF,EACO,SAAAD,CAER,CAAA,CACH,CAAA,CAAA,CAIR,EAEAI,EAAAC,EAAA,KAAAb,CAAA"}