import{a as y,c as x,j as D}from"./index.esm-d48b4efe.js";import{r as s}from"./index-8db94870.js";import{u as k}from"./useDropdown-f9f9610b.js";import{D as S}from"./index-8a5f764d.js";import{e as C}from"./GetIcon-9cceefbc.js";import{t as O}from"./type-0614252a.js";import{m as p}from"./mergeDeepRight-1f3f694c.js";const l={container:{position:"relative",cursor:"pointer",marginTop:"-2px",width:"fit-content",height:"fit-content",background:"white"},dropdown:(e,r)=>({position:"absolute",top:`${e}px`,zIndex:5,...r?{right:"0px"}:{left:"0px"}})},c=({alignLeft:e=!1,containerOpenSx:r={},dropdownSx:u={},items:o,renderButton:m,sx:f={},...w})=>{var d;const[a,n,h]=k(),t=s.useRef(),g=s.useMemo(()=>C(O(o),"Array")?o.map(i=>({...i,onClick:()=>{i.onClick(i),n()}})):o({onClose:n}),[o,n]);return y(x,{ref:t,sx:p(l.container,{...f,...a?r:{}}),...w,children:[m({isOpen:a,onClick:n}),D(S,{isOpen:a,onClickOutside:h,sx:p(l.dropdown((d=t==null?void 0:t.current)==null?void 0:d.offsetHeight,e),{...u}),items:g})]})};try{c.displayName="DropdownButton",c.__docgenInfo={description:"",displayName:"DropdownButton",props:{alignLeft:{defaultValue:{value:"false"},description:`To align dropdown on the left or right, the default is right alignment
TODO: in the future we might need excact place of opening dropdown similar to tooltip`,name:"alignLeft",required:!1,type:{name:"boolean"}},containerOpenSx:{defaultValue:{value:"{}"},description:"Setting custom style for container when dropdown is open'",name:"containerOpenSx",required:!1,type:{name:"SxStyleProp"}},dropdownSx:{defaultValue:{value:"{}"},description:"Setting custom style for dropdown",name:"dropdownSx",required:!1,type:{name:"SxStyleProp"}},items:{defaultValue:null,description:"Dropwdown items either could be an Array, in this case dropdown will be closed after any item clicked\nin order to handle closing of dropdown manually you have to pass a callback function which accepts the `onClose` handler function",name:"items",required:!0,type:{name:"DropdownItem<{}>[] | RenderDropdownItems"}},renderButton:{defaultValue:null,description:"To Render custom component as dropdown's button",name:"renderButton",required:!0,type:{name:"({ onClick, isOpen, }: { onClick: () => void; isOpen: boolean; }) => ReactNode"}}}}}catch{}export{c as D};
//# sourceMappingURL=DropdownButton-de7e5fdd.js.map
