{"version":3,"file":"useClickOutside-d22d402a.js","sources":["../../src/utils/useClickOutside.ts"],"sourcesContent":["import { RefObject, useEffect } from 'react';\n\n/**\n * Triggers the handler on on-click on any element diferent from those defined\n * either inside the refs or the ids arrays.\n */\nconst useOnClickOutside = <T extends HTMLElement>(\n  handler: () => void,\n  refs: RefObject<T>[],\n  ids?: string[],\n) => {\n  useEffect(() => {\n    const listener = (event: Event) => {\n      // Do nothing if click happens on an  element contained in the ids array.\n      if (\n        (ids || []).some((id) => {\n          const el = document.getElementById(id);\n          return el?.contains(event.target as Node);\n        })\n      ) {\n        return;\n      }\n      // Do nothing if click happens on an  element contained in the refs array.\n      if (refs.some((r) => r?.current?.contains(event.target as Node))) {\n        return;\n      }\n      handler();\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [refs, ids, handler]);\n};\n\nexport default useOnClickOutside;\n"],"names":["useOnClickOutside","handler","refs","ids","useEffect","listener","event","id","el","r","_a"],"mappings":"wCAMA,MAAMA,EAAoB,CACxBC,EACAC,EACAC,IACG,CACHC,EAAAA,UAAU,IAAM,CACR,MAAAC,EAAYC,GAAiB,EAG9BH,GAAO,CAAA,GAAI,KAAMI,GAAO,CACjB,MAAAC,EAAK,SAAS,eAAeD,CAAE,EAC9B,OAAAC,GAAA,YAAAA,EAAI,SAASF,EAAM,OAAc,CACzC,GAKCJ,EAAK,KAAMO,GAAM,OAAA,OAAAC,EAAAD,GAAA,YAAAA,EAAG,UAAH,YAAAC,EAAY,SAASJ,EAAM,QAAe,GAGvDL,GAAA,EAGD,gBAAA,iBAAiB,YAAaI,CAAQ,EACtC,SAAA,iBAAiB,aAAcA,CAAQ,EAEzC,IAAM,CACF,SAAA,oBAAoB,YAAaA,CAAQ,EACzC,SAAA,oBAAoB,aAAcA,CAAQ,CAAA,CAEpD,EAAA,CAACH,EAAMC,EAAKF,CAAO,CAAC,CACzB"}