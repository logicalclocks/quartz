{"version":3,"file":"index-7eee803f.js","sources":["../../node_modules/ramda/es/mergeDeepLeft.js","../../src/components/navigation/context/navigation.context.ts","../../src/components/navigation/item/navigation-item.styles.ts","../../src/components/navigation/item/index.tsx","../../src/components/navigation/context/getNode.ts","../../src/components/navigation/context/getPathInTree.ts","../../src/components/navigation/context/navigation.provider.tsx","../../src/components/navigation/category/navigation-category.styles.ts","../../src/components/navigation/category/index.tsx","../../src/components/navigation/container/navigation.styles.ts","../../src/components/navigation/context/buildComponentsTree.ts","../../src/components/navigation/context/buildTree.ts","../../src/components/navigation/container/index.tsx"],"sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\nimport mergeDeepWithKey from \"./mergeDeepWithKey.js\";\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\n\nvar mergeDeepLeft =\n/*#__PURE__*/\n_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\n\nexport default mergeDeepLeft;","import React from 'react';\nimport { TreeNode } from '../types';\n\nexport interface NavigationContextValue {\n  trackBy: string;\n  activePath: string[];\n  tree: any;\n  activeNode: TreeNode | null;\n  onActivate: (name: string) => void;\n  onBack: (name: string) => void;\n}\n\nconst NavigationContext = React.createContext<NavigationContextValue>({\n  trackBy: 'id',\n  activePath: [],\n  tree: [],\n  activeNode: null,\n  onActivate: () => {},\n  onBack: () => {},\n});\n\nexport default NavigationContext;\n","export default {\n  display: 'flex',\n  alignItems: 'center',\n\n  width: '100%',\n  height: '50px',\n\n  boxSizing: 'border-box',\n\n  fontFamily: 'label',\n  fontWeight: 'label',\n  fontSize: 'label',\n\n  lineHeight: '15px',\n\n  transition: 'all 0.25s ease',\n\n  '&.oldui': {\n    background: 'grayShade3',\n    borderTop: '1px solid',\n    borderBottom: '1px solid',\n    borderTopColor: 'grayShade2',\n    borderBottomColor: 'grayShade2',\n  },\n\n  // Icon\n  '> div': {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n\n    width: '50px',\n    height: '50px',\n\n    path: {\n      transition: 'all 0.25s ease',\n    },\n\n    // If there is icon than remove the title padding\n    '~ span': {\n      pl: 0,\n    },\n  },\n\n  // Title\n  '> span': {\n    pl: '20px',\n  },\n\n  '~ div': {\n    borderTopWidth: '1px',\n    borderTopStyle: 'solid',\n    position: 'relative',\n    bottom: '1px',\n  },\n};\n","import * as R from 'ramda';\nimport React, {\n  FC,\n  memo,\n  ReactElement,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n} from 'react';\nimport { Box } from 'rebass';\nimport { Link } from 'react-router-dom';\nimport { useTheme } from '../../../theme/theme';\n\n// Context\nimport NavigationContext from '../context/navigation.context';\nimport { NavigationItemProps } from '../types';\n// Styles\nimport Tooltip from '../../tooltip';\nimport TooltipPositions from '../../tooltip/positions';\nimport styles from './navigation-item.styles';\n\nconst getVariant = (isDisabled = false, isActive = false): string => {\n  if (isDisabled) {\n    return 'disabled';\n  }\n\n  return isActive ? 'active' : 'default';\n};\n\nconst NavigationItem: FC<NavigationItemProps> = (\n  props: NavigationItemProps,\n) => {\n  const { activePath, onActivate, trackBy } = useContext(NavigationContext);\n  const theme = useTheme();\n\n  const {\n    // @ts-ignore\n    [trackBy]: key,\n    icon,\n    title,\n    isActive,\n    isSubItem,\n    children,\n    hasDivider,\n    onClick = () => {},\n    disabled,\n    mainTooltipText = '',\n    secondaryTooltipText = '',\n    href,\n    sx,\n    ...restProps\n  } = props;\n  const isOpen =\n    activePath.length > 1 && !!activePath.slice(activePath.indexOf(key)).length;\n\n  const isActiveItem = activePath.includes(key);\n  const tx = `navigation.${isSubItem ? 'subItem' : 'item'}`;\n  const display = children && isActiveItem && isOpen ? 'block' : 'none';\n\n  const disableTooltip = !mainTooltipText && !secondaryTooltipText;\n\n  const childs = useMemo(\n    () =>\n      React.Children.map(children, (child) =>\n        React.cloneElement(child as ReactElement<NavigationItemProps>, {\n          isSubItem: true,\n        }),\n      ),\n    [children],\n  );\n\n  // Handlers\n  const handleClick = useCallback(() => {\n    onClick();\n    onActivate(key);\n  }, [key, onActivate, onClick]);\n\n  useEffect(() => {\n    if (isActive) {\n      onActivate(key);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isActive]);\n\n  const component = (\n    <Box\n      tx={tx}\n      variant={getVariant(disabled, isActiveItem)}\n      sx={R.mergeDeepLeft(styles, sx ?? {}) as object}\n      onClick={!disabled ? handleClick : undefined}\n      className={key === 'oldui' ? 'oldui' : ''}\n      {...restProps}\n    >\n      {icon && (\n        <div>\n          <Tooltip\n            disabled={disableTooltip || !isOpen}\n            position={TooltipPositions.right}\n            mainText={mainTooltipText}\n            secondaryText={secondaryTooltipText}\n          >\n            {icon}\n          </Tooltip>\n        </div>\n      )}\n      <span>\n        <Tooltip\n          disabled={icon || disableTooltip}\n          position={TooltipPositions.right}\n          mainText={mainTooltipText}\n          secondaryText={secondaryTooltipText}\n        >\n          <span style={disabled ? { color: theme.colors.gray } : {}}>\n            {title}\n          </span>\n        </Tooltip>\n      </span>\n    </Box>\n  );\n\n  return (\n    <Box\n      as=\"li\"\n      tabIndex={!disabled ? -1 : undefined}\n      sx={{\n        listStyleType: 'none',\n        outline: 'none',\n      }}\n    >\n      {href ? (\n        <Link\n          style={{\n            textDecoration: 'none',\n          }}\n          onClick={(e) => e.stopPropagation()}\n          to={href}\n        >\n          {component}\n        </Link>\n      ) : (\n        component\n      )}\n      {hasDivider && <div />}\n      {childs && (\n        <Box paddingLeft=\"33px\" as=\"ul\" aria-label=\"submenu\" display={display}>\n          {childs}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default memo(NavigationItem);\n","import { TreeNode } from '../types';\n\ntype ReturnType = TreeNode | null;\n\nconst getNode = (\n  tree: TreeNode[] | TreeNode,\n  key: keyof TreeNode,\n  value?: string,\n): ReturnType => {\n  if (Array.isArray(tree)) {\n    return tree.reduce<ReturnType>(\n      (acc, node) => acc || getNode(node, key, value),\n      null,\n    );\n  }\n\n  const { children } = tree;\n\n  if (Array.isArray(children)) {\n    const result = getNode(children, key, value);\n\n    if (result) {\n      return result;\n    }\n  }\n\n  return tree[key] === value ? (tree as TreeNode) : null;\n};\n\nexport default getNode;\n","const getPathInTree = (\n  tree: any,\n  callback: (node: any) => boolean,\n  pathKey = 'title',\n): string[] => {\n  if (Array.isArray(tree)) {\n    return tree.reduce(\n      (acc, node) =>\n        acc.length ? acc : getPathInTree(node, callback, pathKey),\n      [],\n    );\n  }\n\n  const { children, [pathKey]: key } = tree;\n\n  if (Array.isArray(children)) {\n    const result = getPathInTree(children, callback, pathKey);\n\n    if (result.length) {\n      return [key, ...result];\n    }\n  }\n\n  return callback(tree) ? [key] : [];\n};\n\nexport default getPathInTree;\n","import React, { FC, useCallback, useEffect, useMemo, useState } from 'react';\n\n// Context\nimport NavigationContext from './navigation.context';\n// Utils\nimport getNode from './getNode';\nimport getPathInTree from './getPathInTree';\n// Types\nimport { TreeNode } from '../types';\n\nexport interface CategoriesProviderProps {\n  tree: TreeNode[];\n  trackBy?: keyof TreeNode;\n  children: React.ReactNode;\n  onNavigate?: (node: TreeNode | null) => void;\n  onBackCLick?: () => void;\n  takeActivePath?: any;\n}\n\nconst NavigationProvider: FC<CategoriesProviderProps> = ({\n  tree,\n  trackBy = 'title',\n  children,\n  onNavigate,\n  onBackCLick,\n  takeActivePath,\n}: CategoriesProviderProps) => {\n  const [activePath, setActivePath] = useState<string[]>([]);\n  const [activeNode, setActiveNode] = useState<TreeNode | null>(null);\n\n  const handleActivate = useCallback(\n    (target: string) => {\n      const path = getPathInTree(\n        tree,\n        (node) => node[trackBy] === target,\n        trackBy,\n      );\n\n      setActivePath(path);\n      takeActivePath(path);\n    },\n    [takeActivePath, trackBy, tree],\n  );\n\n  const handleBack = useCallback(\n    (target: string) => {\n      setActivePath((path) =>\n        path.slice(path.indexOf(target) - 1, path.length - 1),\n      );\n\n      if (onBackCLick) {\n        onBackCLick();\n      }\n    },\n    [onBackCLick],\n  );\n\n  const value = useMemo(\n    () => ({\n      trackBy,\n      tree,\n      activeNode,\n      activePath,\n      onActivate: handleActivate,\n      onBack: handleBack,\n    }),\n    [trackBy, tree, activeNode, activePath, handleActivate, handleBack],\n  );\n\n  useEffect(() => {\n    const node = getNode(tree, trackBy, activePath[activePath.length - 1]);\n\n    if (onNavigate) {\n      onNavigate(node);\n    }\n\n    setActiveNode(node);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activePath, onNavigate, setActiveNode]);\n\n  return (\n    <NavigationContext.Provider value={value}>\n      {children}\n    </NavigationContext.Provider>\n  );\n};\n\nexport default NavigationProvider;\n","export default {\n  position: 'absolute',\n  width: '190px',\n  minHeight: '100%',\n  height: 'fit-content',\n\n  zIndex: 2,\n\n  left: '50px',\n  top: 0,\n  bottom: 0,\n\n  transition: 'all, 0.15s',\n\n  borderLeftWidth: '1px',\n  borderLeftStyle: 'solid',\n\n  '> div:first-of-type': {\n    boxSizing: 'border-box',\n    display: 'flex',\n\n    outline: 'none',\n\n    px: '21px',\n    pt: '18px',\n\n    height: '50px',\n\n    cursor: 'pointer',\n\n    fontFamily: 'Inter',\n    fontWeight: 'bold',\n    fontSize: '12px',\n  },\n};\n","import { Box } from 'rebass';\nimport React, { FC, memo, useCallback, useContext } from 'react';\n\n// Components\nimport NavigationItem from '../item';\nimport Labeling from '../../typography/labeling';\n// Styles\nimport styles from './navigation-category.styles';\n// Content\nimport NavigationContext from '../context/navigation.context';\n// Types\nimport { NavigationItemProps } from '../types';\n\nexport interface NavigationCategoryProps\n  extends Omit<NavigationItemProps, 'isSubItem'> {\n  onBackClick?: () => void;\n  hideBack?: boolean;\n}\n\nconst NavigationCategory: FC<NavigationCategoryProps> = ({\n  children,\n  title,\n  hideBack = false,\n  ...props\n}: NavigationCategoryProps) => {\n  const { onBack } = useContext(NavigationContext);\n\n  const handleBackClick = useCallback(() => {\n    onBack(title);\n  }, [onBack, title]);\n\n  return (\n    <NavigationItem title={title} {...props}>\n      <Box sx={styles} tx=\"navigation\" variant=\"category\">\n        {!hideBack && (\n          <div onClick={handleBackClick} role=\"button\" tabIndex={-1}>\n            <Labeling bold>{'<- Back'}</Labeling>\n          </div>\n        )}\n        {children}\n      </Box>\n    </NavigationItem>\n  );\n};\n\nexport default memo(NavigationCategory);\n","const styles = (isOpen: boolean) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'flex-start',\n\n  borderRightStyle: 'solid',\n  borderRightWidth: '1px',\n\n  position: 'relative',\n\n  overflowX: 'hidden',\n\n  width: '240px',\n  minWidth: '240px',\n  height: '100%',\n\n  '> ul': {\n    width: '100%',\n    height: 'max-content',\n\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n\n    m: 0,\n    p: 0,\n    '>li>div': {\n      display: 'flex',\n      overflow: isOpen && 'hidden',\n      flexDirection: 'row',\n      alignItems: 'center',\n      padding: !isOpen ? '6px 16px' : '0px',\n      height: !isOpen ? '24px' : '1px',\n      background: 'grayShade3',\n      color: 'gray',\n      borderColor: 'grayShade2',\n      borderStyle: 'solid',\n      borderWidth: '1px',\n      borderRightWidth: '0px',\n      borderLeftWidth: '0px',\n      cursor: 'default',\n      paddingLeft: '0px',\n      ':hover': {\n        color: 'gray',\n      },\n    },\n    '>li:first-of-type>div': {\n      height: '0px',\n      padding: '0px',\n      borderWidth: '0px',\n    },\n  },\n  '> div': {\n    width: '100%',\n    fontSize: '12px',\n    fontFamily: 'Inter',\n\n    pb: '16px',\n\n    '>*': {\n      textAlign: 'center',\n    },\n  },\n});\n\nexport default styles;\n","import React from 'react';\nimport NavigationCategory from '../category';\nimport NavigationItem from '../item';\nimport { TreeNode } from '../types';\n\nconst buildComponentsTree = (\n  tree: TreeNode[] | TreeNode,\n  isFirstLevel = true,\n): any => {\n  if (Array.isArray(tree)) {\n    return tree.map((node) => buildComponentsTree(node, isFirstLevel));\n  }\n\n  if (Array.isArray(tree.children)) {\n    return React.createElement(\n      isFirstLevel ? NavigationCategory : NavigationItem,\n      { ...tree, key: tree.id } as any,\n      buildComponentsTree(tree.children, false),\n    );\n  }\n\n  return React.createElement(NavigationItem, { ...tree, key: tree.id } as any);\n};\n\nexport default buildComponentsTree;\n","import React, { ReactElement } from 'react';\n\nimport { NavigationItemProps, TreeNode } from '../types';\n\nconst buildTree = (children: ReactElement<NavigationItemProps>): TreeNode[] => {\n  if (children) {\n    return React.Children.map(\n      children,\n      (child: ReactElement<NavigationItemProps>) => ({\n        title: child.props.title,\n        children:\n          child.props.children &&\n          buildTree(child.props.children as ReactElement<NavigationItemProps>),\n      }),\n    ) as TreeNode[];\n  }\n\n  return [];\n};\n\nexport default buildTree;\n","import { Box } from 'rebass';\nimport React, { FC, ReactElement, useMemo, useState } from 'react';\n\n// Components\nimport NavigationItem from '../item';\nimport NavigationProvider from '../context/navigation.provider';\nimport NavigationCategory, { NavigationCategoryProps } from '../category';\n// Types\nimport { NavigationItemProps, TreeNode } from '../types';\n// Styles\nimport styles from './navigation.styles';\n// Utils\nimport buildComponentsTree from '../context/buildComponentsTree';\nimport buildTree from '../context/buildTree';\n\ntype INavigation<P> = FC<P> & {\n  Item: FC<NavigationItemProps>;\n  Category: FC<NavigationCategoryProps>;\n};\n\nexport interface NavigationProps {\n  children?: React.ReactNode;\n  footer?: React.ReactNode;\n  header?: React.ReactNode;\n  trackBy?: keyof TreeNode;\n  tree?: TreeNode[];\n  onNavigate?: (node: TreeNode | null) => void;\n  onBackCLick?: () => void;\n}\n\nconst Navigation: INavigation<NavigationProps> = ({\n  footer,\n  header,\n  children,\n  tree: propsTree,\n  ...props\n}: NavigationProps) => {\n  const tree = useMemo(() => {\n    if (!propsTree) {\n      return buildTree(children as ReactElement<NavigationItemProps>);\n    }\n\n    return propsTree;\n  }, [children, propsTree]);\n\n  const child = useMemo(\n    () => (propsTree ? buildComponentsTree(propsTree) : children),\n    [propsTree, children],\n  );\n  const [activePath, setActivePath] = useState([]);\n\n  return (\n    <Box\n      as=\"aside\"\n      tx=\"navigation\"\n      variant=\"container\"\n      sx={styles(activePath.length > 1)}\n    >\n      <NavigationProvider tree={tree} {...props} takeActivePath={setActivePath}>\n        {!!header && <div>{header}</div>}\n        <ul>{child}</ul>\n        {!!footer && <div>{footer}</div>}\n      </NavigationProvider>\n    </Box>\n  );\n};\n\nNavigation.Item = NavigationItem;\nNavigation.Category = NavigationCategory;\n\nexport default Navigation;\n"],"names":["mergeDeepLeft","_curry2","lObj","rObj","mergeDeepWithKey","k","lVal","rVal","mergeDeepLeft$1","NavigationContext","React","styles$2","getVariant","isDisabled","isActive","NavigationItem","props","activePath","onActivate","trackBy","useContext","theme","useTheme","key","icon","title","isSubItem","children","hasDivider","onClick","disabled","mainTooltipText","secondaryTooltipText","href","sx","restProps","isOpen","isActiveItem","tx","display","disableTooltip","childs","useMemo","child","handleClick","useCallback","useEffect","component","jsxs","Box","R.mergeDeepLeft","styles","jsx","Tooltip","TooltipPositions","Link","e","NavigationItem$1","memo","getNode","tree","value","acc","node","result","getPathInTree","callback","pathKey","NavigationProvider","onNavigate","onBackCLick","takeActivePath","setActivePath","useState","activeNode","setActiveNode","handleActivate","target","path","handleBack","styles$1","NavigationCategory","hideBack","onBack","handleBackClick","Labeling","NavigationCategory$1","buildComponentsTree","isFirstLevel","buildTree","Navigation","footer","header","propsTree"],"mappings":"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","x_google_ignoreList":[0]}