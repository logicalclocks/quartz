{"version":3,"file":"index-8a5f764d.js","sources":["../../src/components/dropdown/index.tsx"],"sourcesContent":["import React, { FC, useRef } from 'react';\nimport { Flex } from 'rebass';\n\n// Components\nimport ListItem from '../list/item';\nimport List, { ListProps } from '../list/container';\n// Hooks\nimport useOnClickOutside from '../../utils/useClickOutside';\n// Types\nimport { DropdownItem } from './types';\nimport { GetIcon } from '../icon';\nimport Spinner from '../spinner';\nimport Tooltip from '../tooltip';\nimport TooltipPositions from '../tooltip/positions';\n\nexport interface DropdownProps extends Omit<ListProps, 'css' | 'children'> {\n  items: DropdownItem[];\n  isOpen?: boolean;\n  onClickOutside?: () => void;\n}\n\nconst Dropdown: FC<DropdownProps> = ({\n  items,\n  isOpen = true,\n  onClickOutside = () => {},\n  ...props\n}: DropdownProps) => {\n  const containerRef = useRef(null);\n  useOnClickOutside(onClickOutside, [containerRef]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return (\n    <List {...props} ref={containerRef}>\n      {items?.map((item) => {\n        const {\n          value,\n          id,\n          icon,\n          onClick,\n          isLoading,\n          disabled,\n          tooltipProps,\n          ...restProps\n        } = item;\n\n        return (\n          <Tooltip position={TooltipPositions.right} {...tooltipProps}>\n            <ListItem\n              key={id || value}\n              onClick={() => onClick(item)}\n              disabled={disabled}\n              {...restProps}\n            >\n              <Flex width=\"100%\">\n                <Flex flexGrow={1} color=\"black\">\n                  {icon && (\n                    <GetIcon\n                      color={disabled ? 'gray' : 'black'}\n                      icon={icon}\n                      size=\"sm\"\n                    />\n                  )}\n                  {value}\n                </Flex>\n                {isLoading && (\n                  <Spinner\n                    size={16}\n                    ml=\"15px\"\n                    color={disabled ? 'gray' : 'primary'}\n                  />\n                )}\n              </Flex>\n            </ListItem>\n          </Tooltip>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default Dropdown;\n"],"names":["Dropdown","items","isOpen","onClickOutside","props","containerRef","useRef","useOnClickOutside","jsx","List","item","value","id","icon","onClick","isLoading","disabled","tooltipProps","restProps","Tooltip","TooltipPositions","ListItem","jsxs","Flex","GetIcon","Spinner"],"mappings":"qYAqBA,MAAAA,EAAA,CAAA,CAAqC,MAAAC,EACnC,OAAAC,EAAA,GACS,eAAAC,EAAA,IAAA,CACc,EAAC,GAAAC,CAE1B,IAAA,CACE,MAAAC,EAAAC,SAAA,IAAA,EAGA,OAFAC,EAAAJ,EAAA,CAAAE,CAAA,CAAA,EAEAH,EAIAM,EAAAC,EAAA,CAAA,GAAAL,EAAA,IAAAC,EAAA,SAAAJ,GAAA,YAAAA,EAAA,IAAAS,GAAA,CAGM,KAAA,CAAM,MAAAC,EACJ,GAAAC,EACA,KAAAC,EACA,QAAAC,EACA,UAAAC,EACA,SAAAC,EACA,aAAAC,EACA,GAAAC,CACG,EAAAR,EAGL,OAAAF,EAAAW,EAAA,CAAA,SAAAC,EAAA,MAAA,GAAAH,EAAA,SAAAT,EAEIa,EAAC,CAAA,QAAA,IAAAP,EAAAJ,CAAA,EAE4B,SAAAM,EAC3B,GAAAE,EACI,SAAAI,EAAAC,EAAA,CAAA,MAAA,OAAA,SAAA,CAGFD,EAAAC,EAAA,CAAA,SAAA,EAAA,MAAA,QAAA,SAAA,CACGV,GAAAL,EACCgB,EAAC,CAAA,MAAAR,EAAA,OAAA,QAC4B,KAAAH,EAC3B,KAAA,IACK,CAAA,EACPF,CAED,EAAA,EACHI,GAAAP,EAEEiB,EAAC,CAAA,KAAA,GACO,GAAA,OACH,MAAAT,EAAA,OAAA,SACwB,CAAA,CAC7B,EAAA,CAEJ,EAAAJ,GAAAD,CAvBW,CAAA,CAAA,CAyBf,EAAA,CAAA,EA7CN,IAkDJ"}