{"version":3,"file":"card-secondary-ededbe24.js","sources":["../../src/components/card/card.styles.ts","../../src/utils/usePopup.ts","../../src/components/card/index.tsx","../../src/components/card/card-secondary.styles.ts","../../src/components/card/card-secondary.tsx"],"sourcesContent":["import { SxStyleProp } from 'rebass';\n\nexport default {\n  display: 'flex',\n  flexDirection: 'column',\n  position: 'relative',\n  transition: 'max-height .25s linear',\n\n  borderWidth: '1px',\n  borderStyle: 'solid',\n  boxSizing: 'border-box',\n} as SxStyleProp;\n","import { useCallback, useState } from 'react';\n\nexport type UsePopup = [boolean, () => void, (state: boolean) => void];\n\nconst usePopup = (isInitialOpen = false): UsePopup => {\n  const [isOpen, setOpen] = useState<boolean>(isInitialOpen);\n\n  const handleToggle = useCallback(() => {\n    setOpen((open) => !open);\n  }, [setOpen]);\n\n  return [isOpen, handleToggle, setOpen];\n};\n\nexport default usePopup;\n","import React, { FC, memo, useRef } from 'react';\nimport { Box, Card as RebassCard, CardProps as RebassCardProps } from 'rebass';\n\n// Styles\nimport styles from './card.styles';\nimport CardHeader from '../card-header';\nimport { IconName } from '../icon';\nimport { Flex } from '../flex';\nimport usePopup from '../../utils/usePopup';\nimport { IconButton } from '../icon-button';\n\nexport interface CardProps extends Omit<RebassCardProps, 'css' | 'title'> {\n  title?: React.ReactElement | string;\n  link?: string;\n  actions?: React.ReactNode;\n  children?: React.ReactNode;\n  contentProps?: Omit<RebassCardProps, 'css' | 'children'>;\n  readOnly?: boolean;\n  withoutShadow?: boolean;\n  expandable?: boolean;\n}\n\nconst Card: FC<CardProps> = ({\n  title,\n  actions,\n  children,\n  maxHeight,\n  readOnly,\n  contentProps,\n  withoutShadow = false,\n  expandable = false,\n  ...props\n}: CardProps) => {\n  const isShowHeader = title || actions;\n  const [expanded, toggleExpanded] = usePopup();\n\n  const realHeight = expanded ? '1000px' : maxHeight;\n  const contentRef = useRef<HTMLDivElement>();\n\n  const isScrollable =\n    contentRef.current?.scrollHeight &&\n    maxHeight &&\n    contentRef.current?.scrollHeight >\n      +(maxHeight as string).slice(0, (maxHeight as string).indexOf('px')) - 64;\n\n  return (\n    <RebassCard\n      {...props}\n      tx=\"variants\"\n      variant={readOnly ? 'readOnly' : 'card'}\n      maxHeight={realHeight}\n      sx={styles}\n    >\n      {/* Header */}\n      {isShowHeader && (\n        <CardHeader\n          title={title}\n          actions={actions}\n          withShadow={!withoutShadow}\n          withBorderBottom\n        />\n      )}\n      {/* Content */}\n      {!!children && (\n        <Box\n          sx={{\n            boxShadow: isScrollable && !expanded ? 'cardInsetShadow' : 'none',\n            transition: (styles as any)?.transition,\n          }}\n          ref={contentRef}\n          width=\"100%\"\n          maxHeight={realHeight}\n          height=\"100%\"\n          overflowY={isScrollable ? 'auto' : 'initial'}\n          overflowX=\"auto\"\n          p=\"20px\"\n          {...contentProps}\n        >\n          {children}\n        </Box>\n      )}\n      {expandable && (\n        <Flex\n          sx={{\n            position: 'absolute',\n            bottom: '-1px',\n            right: '-1px',\n            width: '100%',\n            justifyContent: 'flex-end',\n          }}\n        >\n          <IconButton\n            icon={expanded ? IconName.arrow_up : IconName.arrow_down}\n            onClick={toggleExpanded}\n            sx={{ cursor: 'pointer', mr: '-31px' }}\n          />\n        </Flex>\n      )}\n    </RebassCard>\n  );\n};\n\nexport default memo(Card);\n","import { SxStyleProp } from 'rebass';\n\nexport const cardHeaderStyles = {\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n\n  width: '100%',\n\n  boxSizing: 'border-box',\n\n  // Title\n  '> h4': {\n    p: '20px',\n    pb: 0,\n    fontFamily: 'subtitle',\n    fontWeight: 'subtitle',\n    fontSize: 'subtitle',\n  },\n\n  // Actions\n  '> div': {\n    ml: 'auto',\n  },\n};\n\nexport default {\n  display: 'flex',\n  flexDirection: 'column',\n\n  borderWidth: '1px',\n  borderStyle: 'solid',\n  boxSizing: 'border-box',\n} as SxStyleProp;\n","import React, { FC, memo, useEffect, useRef, useState } from 'react';\nimport {\n  Box,\n  Flex,\n  Card as RebassCard,\n  CardProps as RebassCardProps,\n} from 'rebass';\n\n// Styles\nimport styles, { cardHeaderStyles } from './card-secondary.styles';\n\nexport interface CardSecondaryProps\n  extends Omit<RebassCardProps, 'css' | 'title'> {\n  title?: React.ReactElement | string;\n  children: React.ReactNode;\n  placeholder?: string;\n  contentProps?: Omit<RebassCardProps, 'css' | 'children'>;\n  readonly?: boolean;\n}\n\nconst CardSecondary: FC<CardSecondaryProps> = ({\n  title,\n  children,\n  maxHeight,\n  contentProps,\n  placeholder,\n  readOnly,\n  ...props\n}: CardSecondaryProps) => {\n  const isShowHeader = !!title;\n\n  const [containerHeight, setHeight] = useState<number>();\n\n  const contentRef = useRef<HTMLDivElement>();\n\n  useEffect(() => {\n    setHeight(contentRef.current?.scrollHeight);\n  }, []);\n\n  const isScrollable =\n    containerHeight &&\n    maxHeight &&\n    containerHeight >\n      +(maxHeight as string).slice(0, (maxHeight as string).indexOf('px')) - 64;\n\n  return (\n    <RebassCard\n      {...props}\n      maxHeight={maxHeight}\n      tx=\"variants\"\n      variant={readOnly ? 'readOnly' : 'card'}\n      sx={{ ...styles, ...props.sx }}\n    >\n      {isShowHeader && (\n        <Box sx={cardHeaderStyles}>\n          {title && (\n            <Flex fontSize=\"18px\" color=\"gray\" alignItems=\"center\" as=\"h4\">\n              {title}\n            </Flex>\n          )}\n        </Box>\n      )}\n\n      <Box\n        sx={{\n          boxShadow: isScrollable ? 'cardInsetShadow' : 'none',\n        }}\n        ref={contentRef}\n        width=\"100%\"\n        maxHeight={maxHeight}\n        height=\"100%\"\n        overflowY={isScrollable ? 'auto' : 'initial'}\n        p=\"20px\"\n        {...contentProps}\n      >\n        {children}\n      </Box>\n    </RebassCard>\n  );\n};\n\nexport default memo(CardSecondary);\n"],"names":["styles$1","usePopup","isInitialOpen","isOpen","setOpen","useState","handleToggle","useCallback","open","Card","title","actions","children","maxHeight","readOnly","contentProps","withoutShadow","expandable","props","isShowHeader","expanded","toggleExpanded","realHeight","contentRef","useRef","isScrollable","_a","_b","jsxs","RebassCard","styles","jsx","CardHeader","Box","Flex","IconButton","IconName","Card$1","memo","cardHeaderStyles","CardSecondary","placeholder","containerHeight","setHeight","useEffect","CardSecondary$1"],"mappings":"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"}