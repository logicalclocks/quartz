{"version":3,"file":"Tab-9c2906c6.js","sources":["../../src/components/form-tabs/types.ts","../../src/components/form-tabs/tab/TabDescription.tsx","../../src/components/form-tabs/tab/tab.styles.ts","../../src/components/form-tabs/tab/Tab.tsx"],"sourcesContent":["// eslint-disable-next-line import/prefer-default-export\nexport enum TabState {\n  valid = 'valid',\n  error = 'error',\n  default = 'default',\n  optional = 'optional',\n}\n","import React, { FC, memo } from 'react';\nimport { Flex } from 'rebass';\nimport Label from '../../label';\nimport { TabState } from '../types';\nimport { GetIcon, IconName } from '../../icon';\n\nexport interface TabDescriptionProps {\n  state: TabState;\n}\n\nconst TabDescription: FC<TabDescriptionProps> = ({ state }) => {\n  switch (state) {\n    case TabState.default:\n      return null;\n    case TabState.optional:\n      return <Label color=\"gray\">optional</Label>;\n    case TabState.valid:\n      return <GetIcon icon={IconName.validate} color=\"primary\" size=\"sm\" />;\n    case TabState.error:\n      return (\n        <Flex flexDirection=\"row\">\n          <GetIcon icon={IconName.error} color=\"labels.red\" size=\"sm\" />\n          <Label ml=\"4px\" color=\"labels.red\">\n            changes required\n          </Label>\n        </Flex>\n      );\n    default:\n      return null;\n  }\n};\n\nexport default memo(TabDescription);\n","import { SxStyleProp } from 'rebass';\n\nexport default {\n  flexDirection: 'column',\n  justifyContent: 'center',\n  flexShrink: 0,\n  px: '20px',\n  py: '8px',\n  height: '100%',\n  borderRightStyle: 'solid',\n  borderRightWidth: '1px',\n  borderRightColor: 'grayShade2',\n  mx: '0px !important',\n\n  borderRadius: 0,\n  boxSizing: 'border-box',\n\n  cursor: 'pointer',\n\n  transition: ({ transitions }) => transitions.button,\n\n  ':hover': {\n    backgroundColor: 'grayShade3',\n  },\n} as SxStyleProp;\n","import React, { FC, memo, useMemo } from 'react';\nimport { Flex } from 'rebass';\nimport TabDescription from './TabDescription';\nimport styles from './tab.styles';\nimport Label from '../../label';\nimport { TabState } from '../types';\n\nexport interface TabProps {\n  title: string;\n  state?: TabState;\n  active?: boolean;\n  onClick: () => any;\n}\n\nconst Tab: FC<TabProps> = ({\n  title,\n  active,\n  state = TabState.default,\n  onClick,\n}) => {\n  const titleColor = useMemo(\n    () => (active ? 'labels.green' : 'black'),\n    [active],\n  );\n\n  return (\n    <Flex sx={styles} onClick={onClick}>\n      <Label mb=\"2px\" color={titleColor}>\n        {title}\n      </Label>\n      <TabDescription state={state} />\n    </Flex>\n  );\n};\n\nexport default memo(Tab);\n"],"names":["TabState","TabDescription","state","jsx","Label","GetIcon","IconName","jsxs","Flex","TabDescription$1","memo","styles","transitions","Tab","title","active","onClick","titleColor","useMemo","Tab$1"],"mappings":"uPACY,IAAAA,GAAAA,IACVA,EAAA,MAAQ,QACRA,EAAA,MAAQ,QACRA,EAAA,QAAU,UACVA,EAAA,SAAW,WAJDA,IAAAA,GAAA,CAAA,CAAA,ECSZ,MAAAC,EAAA,CAAA,CAAA,MAAAC,KAAA,CACE,OAAAA,EAAA,CAAe,KAAAF,EAAA,QAEX,OAAA,KAAO,KAAAA,EAAA,SAEP,OAAAG,EAAAC,EAAA,CAAA,MAAA,OAAA,SAAA,UAAA,CAAA,EAAmC,KAAAJ,EAAA,MAEnC,OAAAG,EAAAE,EAAA,CAAA,KAAAC,EAAA,SAAA,MAAA,UAAA,KAAA,IAAA,CAAA,EAAmE,KAAAN,EAAA,MAEnE,OAAAO,EAAAC,EAAA,CAAA,cAAA,MAAA,SAAA,CAEIL,EAAAE,EAAA,CAAA,KAAAC,EAAA,MAAA,MAAA,aAAA,KAAA,KAAA,EAA4DH,EAAAC,EAAA,CAAA,GAAA,MAAA,MAAA,aAAA,SAAA,mBAAA,CAG5D,CAAA,CAAA,EACF,QAGF,OAAA,IAAO,CAEb,EAEAK,EAAAC,EAAA,KAAAT,CAAA,2RC9BA,MAAeU,EAAA,CACb,cAAe,SACf,eAAgB,SAChB,WAAY,EACZ,GAAI,OACJ,GAAI,MACJ,OAAQ,OACR,iBAAkB,QAClB,iBAAkB,MAClB,iBAAkB,aAClB,GAAI,iBAEJ,aAAc,EACd,UAAW,aAEX,OAAQ,UAER,WAAY,CAAC,CAAE,YAAAC,KAAkBA,EAAY,OAE7C,SAAU,CACR,gBAAiB,YACnB,CACF,ECVAC,EAAA,CAAA,CAA2B,MAAAC,EACzB,OAAAC,EACA,MAAAb,EAAAF,EAAA,QACiB,QAAAgB,CAEnB,IAAA,CACE,MAAAC,EAAAC,EAAA,QAAmB,IAAAH,EAAA,eAAA,QACgB,CAAAA,CAAA,CAC1B,EAGT,OAAAR,EAAAC,EAAA,CAAA,GAAAG,EAAA,QAAAK,EAAA,SAAA,CAEIb,EAAAC,EAAA,CAAA,GAAA,MAAA,MAAAa,EAAA,SAAAH,EAAA,EAEAX,EAAAF,EAAA,CAAA,MAAAC,EAAA,CAC8B,CAAA,CAAA,CAGpC,EAEAiB,EAAAT,EAAA,KAAAG,CAAA"}