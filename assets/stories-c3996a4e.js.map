{"version":3,"file":"stories-c3996a4e.js","sources":["../../src/components/embedded-tabs/stories.tsx"],"sourcesContent":["import { Meta, StoryObj } from '@storybook/react';\nimport React, { useState } from 'react';\nimport { Box, Flex } from 'rebass';\nimport Labeling from '../typography/labeling';\nimport EmbeddedTabs from '.';\nimport { Button } from '../button';\n\nconst meta = {\n  title: 'EmbeddedTabs',\n  component: EmbeddedTabs,\n  subcomponents: {\n    Controlled: EmbeddedTabs.Controlled,\n  },\n\n  argTypes: {\n    tabs: {\n      required: true,\n      description: 'A list of tab items.',\n    },\n    initialTab: {\n      required: false,\n      description: 'The initial tab to be selected.',\n      default: 0,\n    },\n    onTabChange: {\n      description: 'Callback to be called when a tab is selected.',\n      required: false,\n    },\n  },\n} as Meta<typeof EmbeddedTabs>;\nexport default meta;\n\nconst tabs = [\n  {\n    title: 'Validation Reports',\n  },\n  {\n    title: 'Results',\n  },\n  {\n    title: 'Statistics',\n  },\n  {\n    title: 'And a disabled tab',\n    disabled: true,\n  },\n];\n\ntype Story = StoryObj<typeof EmbeddedTabs>;\nconst args = {\n  tabs,\n};\nexport const Uncontrolled: Story = {\n  args,\n  render: (props) => {\n    const [activeTab, setActiveTab] = useState(props.initialTab ?? 0);\n\n    return (\n      <Box width=\"700px\">\n        <EmbeddedTabs {...props} onTabChange={setActiveTab} />\n        <Box mt={3}>\n          <Labeling bold>Active tab: {tabs[activeTab].title}</Labeling>\n        </Box>\n      </Box>\n    );\n  },\n};\n\nexport const Controlled: Story = {\n  args,\n  render: (props) => {\n    const [activeTab, setActiveTab] = useState(0);\n\n    return (\n      <Box width=\"700px\">\n        <EmbeddedTabs.Controlled\n          {...props}\n          activeTab={activeTab}\n          onTabChange={setActiveTab}\n        />\n        <Box mt={3}>\n          <Labeling bold>\n            This component is controlled. Active tab: {tabs[activeTab].title}{' '}\n          </Labeling>\n          <Flex mt={2} sx={{ gap: '10px' }}>\n            <Button onClick={() => setActiveTab(2)}>Jump to Statistics</Button>\n            <Button onClick={() => setActiveTab(1)}>Jump to Results</Button>\n          </Flex>\n        </Box>\n      </Box>\n    );\n  },\n};\n"],"names":["meta","EmbeddedTabs","tabs","args","Uncontrolled","props","activeTab","setActiveTab","useState","jsxs","Box","jsx","Labeling","Controlled","Flex","Button"],"mappings":"yyBAOA,MAAMA,EAAO,CACX,MAAO,eACP,UAAWC,EACX,cAAe,CACb,WAAYA,EAAa,UAC3B,EAEA,SAAU,CACR,KAAM,CACJ,SAAU,GACV,YAAa,sBACf,EACA,WAAY,CACV,SAAU,GACV,YAAa,kCACb,QAAS,CACX,EACA,YAAa,CACX,YAAa,gDACb,SAAU,EACZ,CACF,CACF,EAGMC,EAAO,CACX,CACE,MAAO,oBACT,EACA,CACE,MAAO,SACT,EACA,CACE,MAAO,YACT,EACA,CACE,MAAO,qBACP,SAAU,EACZ,CACF,EAGMC,EAAO,CACX,KAAAD,CACF,EACaE,EAAsB,CACjC,KAAAD,EACA,OAASE,GAAU,CACjB,KAAM,CAACC,EAAWC,CAAY,EAAIC,EAAS,SAAAH,EAAM,YAAc,CAAC,EAG9D,OAAAI,EAACC,EAAI,CAAA,MAAM,QACT,SAAA,CAAAC,EAACV,EAAc,CAAA,GAAGI,EAAO,YAAaE,CAAc,CAAA,IACnDG,EAAI,CAAA,GAAI,EACP,SAACD,EAAAG,EAAA,CAAS,KAAI,GAAC,SAAA,CAAA,eAAaV,EAAKI,CAAS,EAAE,KAAA,CAAA,CAAM,CACpD,CAAA,CACF,CAAA,CAAA,CAEJ,CACF,EAEaO,EAAoB,CAC/B,KAAAV,EACA,OAASE,GAAU,CACjB,KAAM,CAACC,EAAWC,CAAY,EAAIC,WAAS,CAAC,EAG1C,OAAAC,EAACC,EAAI,CAAA,MAAM,QACT,SAAA,CAAAC,EAACV,EAAa,WAAb,CACE,GAAGI,EACJ,UAAAC,EACA,YAAaC,CAAA,CACf,EACAE,EAACC,EAAI,CAAA,GAAI,EACP,SAAA,CAACD,EAAAG,EAAA,CAAS,KAAI,GAAC,SAAA,CAAA,6CAC8BV,EAAKI,CAAS,EAAE,MAAO,GAAA,EACpE,EACAG,EAACK,GAAK,GAAI,EAAG,GAAI,CAAE,IAAK,MACtB,EAAA,SAAA,CAAAH,EAACI,GAAO,QAAS,IAAMR,EAAa,CAAC,EAAG,SAAkB,qBAAA,IACzDQ,EAAO,CAAA,QAAS,IAAMR,EAAa,CAAC,EAAG,SAAe,kBAAA,CAAA,EACzD,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,CACF"}