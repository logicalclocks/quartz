{"version":3,"file":"core.browser.esm-d02c0f74.js","sources":["../../node_modules/@emotion/css/dist/css.browser.esm.js","../../node_modules/@emotion/core/dist/core.browser.esm.js"],"sourcesContent":["import { serializeStyles } from '@emotion/serialize';\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nexport default css;\n","import _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport { createElement, Component, Fragment } from 'react';\nimport '@emotion/cache';\nimport { h as hasOwnProperty, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext } from './emotion-element-04d85134.browser.esm.js';\nexport { C as CacheProvider, T as ThemeContext, w as withEmotionCache } from './emotion-element-04d85134.browser.esm.js';\nimport { insertStyles, getRegisteredStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { StyleSheet } from '@emotion/sheet';\nimport css from '@emotion/css';\nexport { default as css } from '@emotion/css';\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false;\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n\n  if (typeof styles === 'function') {\n    return /*#__PURE__*/createElement(ThemeContext.Consumer, null, function (theme) {\n      var serialized = serializeStyles([styles(theme)]);\n      return /*#__PURE__*/createElement(InnerGlobal, {\n        serialized: serialized,\n        cache: cache\n      });\n    });\n  }\n\n  var serialized = serializeStyles([styles]);\n  return /*#__PURE__*/createElement(InnerGlobal, {\n    serialized: serialized,\n    cache: cache\n  });\n});\n\n// maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\nvar InnerGlobal = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InnerGlobal, _React$Component);\n\n  function InnerGlobal(props, context, updater) {\n    return _React$Component.call(this, props, context, updater) || this;\n  }\n\n  var _proto = InnerGlobal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.sheet = new StyleSheet({\n      key: this.props.cache.key + \"-global\",\n      nonce: this.props.cache.sheet.nonce,\n      container: this.props.cache.sheet.container\n    }); // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion-\" + this.props.cache.key + \"=\\\"\" + this.props.serialized.name + \"\\\"]\");\n\n    if (node !== null) {\n      this.sheet.tags.push(node);\n    }\n\n    if (this.props.cache.sheet.tags.length) {\n      this.sheet.before = this.props.cache.sheet.tags[0];\n    }\n\n    this.insertStyles();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.serialized.name !== this.props.serialized.name) {\n      this.insertStyles();\n    }\n  };\n\n  _proto.insertStyles = function insertStyles$1() {\n    if (this.props.serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(this.props.cache, this.props.serialized.next, true);\n    }\n\n    if (this.sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = this.sheet.tags[this.sheet.tags.length - 1].nextElementSibling;\n      this.sheet.before = element;\n      this.sheet.flush();\n    }\n\n    this.props.cache.insert(\"\", this.props.serialized, this.sheet, false);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.sheet.flush();\n  };\n\n  _proto.render = function render() {\n\n    return null;\n  };\n\n  return InnerGlobal;\n}(Component);\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar Noop = function Noop() {\n  return null;\n};\n\nvar ClassNames = withEmotionCache(function (props, context) {\n  return /*#__PURE__*/createElement(ThemeContext.Consumer, null, function (theme) {\n    var hasRendered = false;\n\n    var css = function css() {\n      if (hasRendered && process.env.NODE_ENV !== 'production') {\n        throw new Error('css can only be used during render');\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var serialized = serializeStyles(args, context.registered);\n\n      {\n        insertStyles(context, serialized, false);\n      }\n\n      return context.key + \"-\" + serialized.name;\n    };\n\n    var cx = function cx() {\n      if (hasRendered && process.env.NODE_ENV !== 'production') {\n        throw new Error('cx can only be used during render');\n      }\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return merge(context.registered, css, classnames(args));\n    };\n\n    var content = {\n      css: css,\n      cx: cx,\n      theme: theme\n    };\n    var ele = props.children(content);\n    hasRendered = true;\n    var possiblyStyleElement = /*#__PURE__*/createElement(Noop, null);\n\n\n    return /*#__PURE__*/createElement(Fragment, null, possiblyStyleElement, ele);\n  });\n});\n\nexport { ClassNames, Global, jsx as createElement, jsx, keyframes };\n"],"names":["css","_len","args","_key","serializeStyles","Global","withEmotionCache","props","cache","styles","createElement","ThemeContext","theme","serialized","InnerGlobal","_React$Component","_inheritsLoose","context","updater","_proto","StyleSheet","node","prevProps","insertStyles","element","Component","keyframes","insertable","name"],"mappings":"2JAEA,SAASA,GAAM,CACb,QAASC,EAAO,UAAU,OAAQC,EAAO,IAAI,MAAMD,CAAI,EAAGE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,CAAI,EAAI,UAAUA,CAAI,EAG7B,OAAOC,EAAgBF,CAAI,CAC7B,CCyBG,IAACG,EAAwBC,EAAiB,SAAUC,EAAOC,EAAO,CAUnE,IAAIC,EAASF,EAAM,OAEnB,GAAI,OAAOE,GAAW,WACpB,OAAoBC,EAAa,cAACC,EAAa,SAAU,KAAM,SAAUC,EAAO,CAC9E,IAAIC,EAAaT,EAAgB,CAACK,EAAOG,CAAK,CAAC,CAAC,EAChD,OAAoBF,EAAAA,cAAcI,EAAa,CAC7C,WAAYD,EACZ,MAAOL,CACf,CAAO,CACP,CAAK,EAGH,IAAIK,EAAaT,EAAgB,CAACK,CAAM,CAAC,EACzC,OAAoBC,EAAAA,cAAcI,EAAa,CAC7C,WAAYD,EACZ,MAAOL,CACX,CAAG,CACH,CAAC,EAKGM,EAA2B,SAAUC,EAAkB,CACzDC,EAAeF,EAAaC,CAAgB,EAE5C,SAASD,EAAYP,EAAOU,EAASC,EAAS,CAC5C,OAAOH,EAAiB,KAAK,KAAMR,EAAOU,EAASC,CAAO,GAAK,IAChE,CAED,IAAIC,EAASL,EAAY,UAEzB,OAAAK,EAAO,kBAAoB,UAA6B,CACtD,KAAK,MAAQ,IAAIC,EAAW,CAC1B,IAAK,KAAK,MAAM,MAAM,IAAM,UAC5B,MAAO,KAAK,MAAM,MAAM,MAAM,MAC9B,UAAW,KAAK,MAAM,MAAM,MAAM,SACxC,CAAK,EAED,IAAIC,EAAO,SAAS,cAAc,sBAAwB,KAAK,MAAM,MAAM,IAAM,KAAQ,KAAK,MAAM,WAAW,KAAO,IAAK,EAEvHA,IAAS,MACX,KAAK,MAAM,KAAK,KAAKA,CAAI,EAGvB,KAAK,MAAM,MAAM,MAAM,KAAK,SAC9B,KAAK,MAAM,OAAS,KAAK,MAAM,MAAM,MAAM,KAAK,CAAC,GAGnD,KAAK,aAAY,CACrB,EAEEF,EAAO,mBAAqB,SAA4BG,EAAW,CAC7DA,EAAU,WAAW,OAAS,KAAK,MAAM,WAAW,MACtD,KAAK,aAAY,CAEvB,EAEEH,EAAO,aAAe,UAA0B,CAM9C,GALI,KAAK,MAAM,WAAW,OAAS,QAEjCI,EAAa,KAAK,MAAM,MAAO,KAAK,MAAM,WAAW,KAAM,EAAI,EAG7D,KAAK,MAAM,KAAK,OAAQ,CAE1B,IAAIC,EAAU,KAAK,MAAM,KAAK,KAAK,MAAM,KAAK,OAAS,CAAC,EAAE,mBAC1D,KAAK,MAAM,OAASA,EACpB,KAAK,MAAM,QAGb,KAAK,MAAM,MAAM,OAAO,GAAI,KAAK,MAAM,WAAY,KAAK,MAAO,EAAK,CACxE,EAEEL,EAAO,qBAAuB,UAAgC,CAC5D,KAAK,MAAM,OACf,EAEEA,EAAO,OAAS,UAAkB,CAEhC,OAAO,IACX,EAESL,CACT,EAAEW,EAAS,SAAA,EAEPC,EAAY,UAAqB,CACnC,IAAIC,EAAa3B,EAAI,MAAM,OAAQ,SAAS,EACxC4B,EAAO,aAAeD,EAAW,KAErC,MAAO,CACL,KAAMC,EACN,OAAQ,cAAgBA,EAAO,IAAMD,EAAW,OAAS,IACzD,KAAM,EACN,SAAU,UAAoB,CAC5B,MAAO,QAAU,KAAK,KAAO,IAAM,KAAK,OAAS,OAClD,CACL,CACA","x_google_ignoreList":[0,1]}