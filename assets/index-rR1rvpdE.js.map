{"version":3,"file":"index-rR1rvpdE.js","sources":["../../src/utils/useClickOutside.ts","../../src/components/dropdown/index.tsx"],"sourcesContent":["import { RefObject, useEffect } from 'react';\n\n/**\n * Triggers the handler on on-click on any element diferent from those defined\n * either inside the refs or the ids arrays.\n */\nconst useOnClickOutside = <T extends HTMLElement>(\n  handler: () => void,\n  refs: RefObject<T>[],\n  ids?: string[],\n) => {\n  useEffect(() => {\n    const listener = (event: Event) => {\n      // Do nothing if click happens on an  element contained in the ids array.\n      if (\n        (ids || []).some((id) => {\n          const el = document.getElementById(id);\n          return el?.contains(event.target as Node);\n        })\n      ) {\n        return;\n      }\n      // Do nothing if click happens on an  element contained in the refs array.\n      if (refs.some((r) => r?.current?.contains(event.target as Node))) {\n        return;\n      }\n      handler();\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [refs, ids, handler]);\n};\n\nexport default useOnClickOutside;\n","import { useRef } from 'react';\nimport { Flex } from 'rebass';\n\n// Components\nimport ListItem from '../list/item';\nimport List, { ListProps } from '../list/container';\n// Hooks\nimport useOnClickOutside from '../../utils/useClickOutside';\n// Types\nimport { DropdownItem } from './types';\nimport { GetIcon } from '../icon';\nimport Spinner from '../spinner';\nimport Tooltip from '../tooltip';\nimport TooltipPositions from '../tooltip/positions';\n\nexport interface DropdownProps extends Omit<ListProps, 'css' | 'children'> {\n  items: DropdownItem[];\n  isOpen?: boolean;\n  onClickOutside?: () => void;\n}\n\nconst Dropdown = ({\n  items,\n  isOpen = true,\n  onClickOutside = () => {},\n  ...props\n}: DropdownProps) => {\n  const containerRef = useRef(null);\n  useOnClickOutside(onClickOutside, [containerRef]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return (\n    <List {...props} ref={containerRef}>\n      {items?.map((item, idx) => {\n        const {\n          value,\n          id,\n          icon,\n          onClick,\n          isLoading,\n          disabled,\n          tooltipProps,\n          ...restProps\n        } = item;\n\n        return (\n          <Tooltip position={TooltipPositions.right} {...tooltipProps}>\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={id || typeof value !== 'object' ? (value as string) : idx}\n              onClick={() => onClick(item)}\n              disabled={disabled}\n              {...restProps}\n            >\n              <Flex width=\"100%\">\n                <Flex flexGrow={1} color=\"black\">\n                  {icon && (\n                    <GetIcon\n                      color={disabled ? 'gray' : 'black'}\n                      icon={icon}\n                      size=\"sm\"\n                    />\n                  )}\n                  {value}\n                </Flex>\n                {isLoading && (\n                  <Spinner\n                    size={16}\n                    ml=\"15px\"\n                    color={disabled ? 'gray' : 'primary'}\n                  />\n                )}\n              </Flex>\n            </ListItem>\n          </Tooltip>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default Dropdown;\n"],"names":["useOnClickOutside","handler","refs","ids","useEffect","listener","event","id","el","r","_a","Dropdown","items","isOpen","onClickOutside","props","containerRef","useRef","jsx","List","item","idx","value","icon","onClick","isLoading","disabled","tooltipProps","restProps","Tooltip","TooltipPositions","ListItem","jsxs","Flex","GetIcon","Spinner"],"mappings":"4UAMA,MAAMA,EAAoB,CACxBC,EACAC,EACAC,IACG,CACHC,EAAAA,UAAU,IAAM,CACR,MAAAC,EAAYC,GAAiB,EAG9BH,GAAO,CAAA,GAAI,KAAMI,GAAO,CACjB,MAAAC,EAAK,SAAS,eAAeD,CAAE,EAC9B,OAAAC,GAAA,YAAAA,EAAI,SAASF,EAAM,OAAc,CACzC,GAKCJ,EAAK,KAAMO,GAAM,OAAA,OAAAC,EAAAD,GAAA,YAAAA,EAAG,UAAH,YAAAC,EAAY,SAASJ,EAAM,QAAe,GAGvDL,GAAA,EAGD,gBAAA,iBAAiB,YAAaI,CAAQ,EACtC,SAAA,iBAAiB,aAAcA,CAAQ,EAEzC,IAAM,CACF,SAAA,oBAAoB,YAAaA,CAAQ,EACzC,SAAA,oBAAoB,aAAcA,CAAQ,CAAA,CAEpD,EAAA,CAACH,EAAMC,EAAKF,CAAO,CAAC,CACzB,EChBAU,EAAA,CAAA,CAAkB,MAAAC,EAChB,OAAAC,EAAA,GACS,eAAAC,EAAA,IAAA,CACc,EAAC,GAAAC,CAE1B,IAAA,CACE,MAAAC,EAAAC,SAAA,IAAA,EAGA,OAFAjB,EAAAc,EAAA,CAAAE,CAAA,CAAA,EAEAH,EAIAK,MAAAC,EAAA,CAAA,GAAAJ,EAAA,IAAAC,EAAA,SAAAJ,GAAA,YAAAA,EAAA,IAAA,CAAAQ,EAAAC,IAAA,CAGM,KAAA,CAAM,MAAAC,EACJ,GAAAf,EACA,KAAAgB,EACA,QAAAC,EACA,UAAAC,EACA,SAAAC,EACA,aAAAC,EACA,GAAAC,CACG,EAAAR,EAGL,OAAAF,EAAA,IAAAW,EAAA,CAAA,SAAAC,EAAA,MAAA,GAAAH,EAAA,SAAAT,EAAA,IAEIa,EAAC,CAAA,QAAA,IAAAP,EAAAJ,CAAA,EAG4B,SAAAM,EAC3B,GAAAE,EACI,SAAAI,EAAA,KAAAC,EAAA,CAAA,MAAA,OAAA,SAAA,CAGFD,EAAA,KAAAC,EAAA,CAAA,SAAA,EAAA,MAAA,QAAA,SAAA,CACGV,GAAAL,EAAA,IACCgB,EAAC,CAAA,MAAAR,EAAA,OAAA,QAC4B,KAAAH,EAC3B,KAAA,IACK,CAAA,EACPD,CAED,EAAA,EACHG,GAAAP,EAAA,IAEEiB,EAAC,CAAA,KAAA,GACO,GAAA,OACH,MAAAT,EAAA,OAAA,SACwB,CAAA,CAC7B,EAAA,CAEJ,EAAAnB,GAAA,OAAAe,GAAA,SAAAA,EAAAD,CAvB2D,CAAA,CAAA,CAyB/D,EAAA,CAAA,EA9CN,IAmDJ"}