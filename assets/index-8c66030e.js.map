{"version":3,"file":"index-8c66030e.js","sources":["../../src/components/icon-button/icon-button.styles.ts","../../src/components/icon-button/index.tsx"],"sourcesContent":["export const wrapper = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n\n  height: '32px',\n  width: '32px',\n};\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonProps } from 'rebass';\n\n// Components\nimport Tooltip, { TooltipProps } from '../tooltip';\n\nimport { Button } from '../button';\nimport GetIcon from '../icon/GetIcon';\nimport { IconName } from '../icon/list';\n\nimport * as S from './icon-button.styles';\n\nexport interface IconButtonProps extends Omit<ButtonProps, 'css'> {\n  intent?: 'primary' | 'ghost' | 'ghost-white'; // TODO remove this intent, not used\n  tooltip?: string;\n  icon: IconName;\n  disabled?: boolean;\n  href?: string;\n  tooltipProps?: Omit<TooltipProps, 'children' | 'mainText'>;\n  onClickIcon?: React.MouseEventHandler<HTMLAnchorElement>;\n}\n\nexport const IconButton: FC<IconButtonProps> = ({\n  intent: _, // TODO remove this\n  tooltip,\n  icon,\n  disabled = false,\n  tooltipProps,\n  href,\n  onClickIcon,\n  target,\n  sx,\n  ...props\n}: IconButtonProps) => {\n  let component;\n  if (tooltip) {\n    component = (\n      <Tooltip {...tooltipProps} disabled={disabled} mainText={tooltip}>\n        <Button\n          sx={{ ...S.wrapper, ...sx }}\n          variant=\"secondary\"\n          disabled={disabled}\n          {...props}\n        >\n          <GetIcon disabled={disabled} icon={icon} size=\"sm\" />\n        </Button>\n      </Tooltip>\n    );\n  } else {\n    component = (\n      <Button\n        sx={{ ...S.wrapper, ...sx }}\n        variant=\"secondary\"\n        disabled={disabled}\n        {...props}\n      >\n        <GetIcon disabled={disabled} icon={icon} size=\"sm\" />\n      </Button>\n    );\n  }\n\n  if (href) {\n    return (\n      <Link\n        style={{\n          textDecoration: 'none',\n        }}\n        onClick={onClickIcon}\n        to={href}\n        target={target}\n        {...(target === '_blank' ? { rel: 'noopener noreferrer' } : {})}\n      >\n        {component}\n      </Link>\n    );\n  }\n  return component;\n};\n"],"names":["wrapper","IconButton","_","tooltip","icon","disabled","tooltipProps","href","onClickIcon","target","sx","props","component","jsx","Tooltip","Button","S.wrapper","GetIcon","Link"],"mappings":"2OAAO,MAAMA,EAAU,CACrB,QAAS,OACT,WAAY,SACZ,eAAgB,SAEhB,OAAQ,OACR,MAAO,MACT,ECgBOC,EAAA,CAAA,CAAyC,OAAAC,EACtC,QAAAC,EACR,KAAAC,EACA,SAAAC,EAAA,GACW,aAAAC,EACX,KAAAC,EACA,YAAAC,EACA,OAAAC,EACA,GAAAC,EACA,GAAAC,CAEF,IAAA,CACE,IAAAC,EA2BA,OA1BAT,EACES,EAAAC,EAAAC,EAAA,CAAA,GAAAR,EAAA,SAAAD,EAAA,SAAAF,EAAA,SAAAU,EAEIE,EAAC,CAAA,GAAA,CAAA,GAAAC,EAAA,GAAAN,CAAA,EAC2B,QAAA,YAClB,SAAAL,EACR,GAAAM,EACI,SAAAE,EAAAI,EAAA,CAAA,SAAAZ,EAAA,KAAAD,EAAA,KAAA,KAAA,CAE+C,CAAA,CAAA,CAAA,EAKzDQ,EAAAC,EACEE,EAAC,CAAA,GAAA,CAAA,GAAAC,EAAA,GAAAN,CAAA,EAC2B,QAAA,YAClB,SAAAL,EACR,GAAAM,EACI,SAAAE,EAAAI,EAAA,CAAA,SAAAZ,EAAA,KAAAD,EAAA,KAAA,KAAA,CAE+C,CAAA,EAKzDG,EACEM,EACEK,EAAC,CAAA,MAAA,CACQ,eAAA,MACW,EAClB,QAAAV,EACS,GAAAD,EACL,OAAAE,EACJ,GAAAA,IAAA,SAAA,CAAA,IAAA,qBAAA,EAAA,CAAA,EAC6D,SAAAG,CAE5D,CAAA,EAIPA,CACF"}