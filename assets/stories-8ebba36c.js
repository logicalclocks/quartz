import{j as n}from"./index.esm-95acea13.js";import{a as c}from"./chunk-WFFRPTHA-dbb6442d.js";import{w as d,e,u as r}from"./index-d29bfcdb.js";import{r as g}from"./index-8ee6c85d.js";import"./compact-button-49fddb1f.js";import"./index-7d9331b5.js";import"./index-c7813c86.js";import"./index-4aae416a.js";import"./card-secondary-c340943c.js";import"./index-506c8cb2.js";import"./index-56d328a8.js";import"./index-cf35c599.js";import"./index-c0b05d3d.js";import{E as l}from"./index-e1201a84.js";import"./checkbox-group-fb0e304f.js";import"./index-d6e5e182.js";import"./index-f009891c.js";import"./index-00772ee4.js";import"./index-00b1c738.js";import"./theme-c1401d61.js";import"./GetIcon-94281711.js";import"./index-e8dd761c.js";import"./index-f6b4e446.js";import"./index-8e4f4f79.js";import"./index-4c659fcb.js";import"./index-2a26cb72.js";import"./index-0fbeecaa.js";import"./index-4265440b.js";import"./index-c5a183b8.js";import"./index-607552a4.js";import"./index-033bfcf6.js";import"./index-9f5bc5f4.js";import"./index-c40f68ee.js";import"./index-6a2ce10b.js";import"./slider-c0f7996d.js";import"./range-slider-dd89aad3.js";import"./index-dc620495.js";import"./index-524518b1.js";import"./index-262f2f66.js";import"./index-b774e5b2.js";import"./index-71f4177e.js";import"./index-02a42f1e.js";import"./value-b8103e43.js";import"./labeling-36656030.js";import"./ThemeProvider-12f6ca24.js";import"./index-32e1c7a4.js";import"./index-c8aa8642.js";import{B as b}from"./index-5d579de3.js";import"./Bar-24450f1b.js";import"./index-27f87954.js";import"./Flex-37b3be28.js";import"./index-01e8c9da.js";import"./Dot-c575438b.js";import"./Badge-162b632d.js";import"./TextValueBadge-761de6d1.js";import"./ProjectBadge-667b1e6c.js";import"./index-746a3f99.js";import"./_commonjsHelpers-de833af9.js";import"./preview-errors-a907aeee.js";import"./index-356e4a49.js";import"./index-f076af93.js";import"./_baseIsEqual-c1de01ea.js";import"./index-03bbf7d1.js";import"./uniq-089a3f3a.js";import"./index-d38bc732.js";import"./index-de5904e7.js";import"./list-9cfea01e.js";import"./index-db3f1ec3.js";import"./Button-5064b969.js";import"./index-093317e9.js";import"./index-8bf7f4ad.js";import"./_curry3-2506b18d.js";import"./_curry2-9db85ff5.js";import"./index-394724a1.js";import"./FileItemExplorer-b1789f8f.js";import"./index-34c655b6.js";import"./index-3d8762b2.js";import"./iframe-a57b3d90.js";import"../sb-preview/runtime.js";import"./extends-98964cd2.js";import"./objectWithoutPropertiesLoose-4f48578a.js";import"./type-af5339dc.js";import"./_isString-966efe80.js";import"./_isObject-11124c2f.js";import"./mergeDeepRight-032f9ec4.js";import"./mergeDeepWithKey-ac52baf9.js";import"./positions-4b0ff717.js";import"./index-6e4dee96.js";import"./Tab-0ec44408.js";import"./AnimatedProgress-ef2f9b88.js";import"./FreshnessBar-3921f336.js";import"./clamp-5454dae8.js";import"./chunk-ZJJGQIVY-9cf857b2.js";import"./index-ffe84488.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-95ca0d59.js";import"./index-2a89f1ca.js";import"./chunk-5PH6ULNP-08a08ebd.js";import"./chunk-37N6GCLA-ba2a618c.js";import"./index-0bcfbc70.js";import"./chunk-3XANSPY5-cf37bc50.js";import"./index-34ae0f6f.js";import"./index-e67c4366.js";import"./nth-b0f2fe30.js";import"./popper-f3391c26.js";import"./index-948712dc.js";import"./isNativeReflectConstruct-22f77b05.js";import"./setPrototypeOf-0bb37fbe.js";import"./index-d7567f6d.js";import"./inheritsLoose-d541526f.js";import"./core.browser.esm-1eea21ee.js";const xo={title:"EditableSelect",component:l,argTypes:{value:{description:"Array of strings",control:{type:"array"}},options:{description:"array of strings",control:{type:"array"}},label:{control:{type:"text"}},placeholder:{description:"string",control:{type:"text"}},noDataMessage:{description:"string",control:{type:"text"}},disabled:{control:{type:"boolean"}},isMulti:{control:{type:"boolean"}},preventAdding:{description:'Turns off ability to create new options, the "add <>" thing',control:{type:"boolean"}},labelAction:{description:"React Component"},variant:{control:{type:"select"},description:"Component can look different with different variants",options:["primary","white"]}}},y=["integer","string","boolean","float","bigInt"],fo={args:{label:"Label",labelAction:"(optional)",placeholder:"placeholder",noDataMessage:"no options",disabled:!1,isMulti:!0,value:["integer","string"],options:y},render:({value:a,options:o,...t})=>{const[i,m]=g.useState(a),s=p=>{c("onChange")(p),m(p)};return n.jsx(b,{minHeight:"400px",width:"600px",children:n.jsx(l,{...t,value:i,options:o,onChange:s})})},play:async({canvasElement:a,step:o})=>{const t=d(a.parentElement);await o("Ensure default values are used for first render",()=>{e(t.getByText("integer")).toBeDefined(),e(t.getByText("string")).toBeDefined()}),await o("Clicking on label opens the menu",async()=>{const i=await document.querySelector("label");await r.click(i),await r.keyboard("[ArrowDown]"),e(t.getByText("bigInt")).toBeVisible()}),await o("Select all options, run out of them, see *noDataMessage*",async()=>{await r.keyboard("[ArrowDown][Enter][ArrowDown][Enter][ArrowDown][Enter]");const i=await t.findByText("no options");e(i).toBeVisible()}),await o("Remove last two items, see them gone",async()=>{await r.keyboard("[Backspace][Backspace][Backspace][Backspace][Backspace]"),await r.keyboard("[Escape][Tab]"),e(t.queryByText("boolean")).toBeNull(),e(t.queryByText("bigInt")).toBeNull()})}},Bo={args:{label:"Label",labelAction:"(optional)",placeholder:"placeholder",noDataMessage:"no options",disabled:!1,isMulti:!1,value:["integer"],options:y},render:({value:a,options:o,...t})=>{const[i,m]=g.useState(a),s=p=>{c("onChange")(p),m(p)};return n.jsx(b,{minHeight:"400px",width:"600px",children:n.jsx(l,{...t,value:i,options:o,onChange:s})})},play:async({canvasElement:a,step:o})=>{const t=d(a);await o('Ensure "integer" is selected by value, from props',()=>{e(t.getByText("integer")).toBeVisible()}),await o("Clicking on label opens the menu",async()=>{const i=await t.getByText("Label(optional)");await r.click(i),await r.keyboard("[ArrowDown]"),e(t.getByText("bigInt")).toBeVisible()}),await o("Choose third option, see it being chosen",async()=>{const i=await t.getByText("Label(optional)");await r.click(i),await r.keyboard("[ArrowDown][ArrowDown][Enter]"),e(t.getByText("boolean")).toBeVisible()})}};export{fo as Multi,Bo as Single,xo as default};
