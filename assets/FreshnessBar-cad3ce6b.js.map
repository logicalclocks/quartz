{"version":3,"file":"FreshnessBar-cad3ce6b.js","sources":["../../node_modules/date-fns/esm/differenceInMilliseconds/index.js","../../src/components/freshness-bar/Bar.tsx","../../src/components/freshness-bar/FreshnessBar.tsx"],"sourcesContent":["import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport default function differenceInMilliseconds(dateLeft, dateRight) {\n  requiredArgs(2, arguments);\n  return toDate(dateLeft).getTime() - toDate(dateRight).getTime();\n}","import React from 'react';\nimport { Box, BoxProps, SxStyleProp } from 'rebass';\n\ninterface Props extends Omit<BoxProps, 'css'> {\n  variant?: 'progress' | 'freshness';\n  width?: string;\n  value: number;\n}\n\nexport const Bar = ({\n  variant = 'progress',\n  value,\n  width = '100px',\n  ...props\n}: Props) => (\n  <Box {...props} tx=\"variants.bar\" variant={variant} sx={styles} width={width}>\n    <Box as=\"span\" sx={overflowStyles(value)} />\n  </Box>\n);\n\nconst styles = {\n  overflow: 'hidden',\n\n  height: '7px',\n  borderRadius: '3.5px',\n};\n\nexport const overflowStyles = (translate: number): SxStyleProp => ({\n  width: '101%',\n  height: '100%',\n\n  display: 'block',\n  pointerEvents: 'none',\n\n  background: '#EBEBEB',\n  transform: `translateX(${100 * translate}%)`,\n});\n","import { differenceInMilliseconds, format } from 'date-fns';\nimport React from 'react';\nimport * as R from 'ramda';\n\nimport Tooltip from '../tooltip';\nimport { Bar } from './Bar';\n\ntype BarSizes = 'sm' | 'md';\n\nexport interface Props {\n  /** expiration date given as `Date`(e.g. via new Date(model.createdAt)) */\n  expirationDate: Date;\n  /** Size, short(sm) or medium (md) */\n  size?: BarSizes;\n}\n\nexport const FreshnessBar = ({\n  expirationDate,\n  size = 'md',\n  ...props\n}: Props) => {\n  return (\n    <Tooltip mainText={format(expirationDate, 'yyyy-MM-dd HH:mm')}>\n      <Bar\n        variant=\"freshness\"\n        value={getProgress(expirationDate)}\n        width={getSize(size)}\n        {...props}\n      />\n    </Tooltip>\n  );\n};\n\nexport default FreshnessBar;\n\nconst getSize = (size: BarSizes) => (size === 'md' ? '100px' : '60px');\n\nconst MILISECONDS_IN_YEARS = 31622437236;\n\nexport const getProgress = (expirationDate: Date) => {\n  const partOfYearExpired =\n    differenceInMilliseconds(new Date(), expirationDate) / MILISECONDS_IN_YEARS; // e.g. for half a year it'd be 0.5, for a bit more -- 0.6 or even 0.7\n  const tillExpiration = 1 - partOfYearExpired; // time left till expiration, 0.5, 0.4, 0.3 respectively ^\n\n  return R.clamp(0, 1, tillExpiration);\n};\n"],"names":["differenceInMilliseconds","dateLeft","dateRight","requiredArgs","toDate","Bar","variant","value","width","props","jsx","Box","styles","overflowStyles","translate","FreshnessBar","expirationDate","size","Tooltip","format","getProgress","getSize","MILISECONDS_IN_YEARS","tillExpiration","R.clamp"],"mappings":"yLAwBe,SAASA,EAAyBC,EAAUC,EAAW,CACpE,OAAAC,EAAa,EAAG,SAAS,EAClBC,EAAOH,CAAQ,EAAE,QAAO,EAAKG,EAAOF,CAAS,EAAE,SACxD,CClBO,MAAAG,EAAA,CAAA,CAAa,QAAAC,EAAA,WACR,MAAAC,EACV,MAAAC,EAAA,QACQ,GAAAC,CAEV,IAAAC,EAAAC,EAAA,CAAA,GAAAF,EAAA,GAAA,eAAA,QAAAH,EAAA,GAAAM,EAAA,MAAAJ,EAAA,SAAAE,EAAAC,EAAA,CAAA,GAAA,OAAA,GAAAE,EAAAN,CAAA,EAAA,CAAA,CAAA,EAMAK,EAAA,CAAe,SAAA,SACH,OAAA,MAEF,aAAA,OAEV,EAEOC,EAAAC,IAAA,CAA4D,MAAA,OAC1D,OAAA,OACC,QAAA,QAEC,cAAA,OACM,WAAA,UAEH,UAAA,cAAA,IAAAA,KAEd;;;;;uTCpBO,MAAAC,EAAA,CAAA,CAAsB,eAAAC,EAC3B,KAAAC,EAAA,KACO,GAAAR,CAET,IACEC,EAAAQ,EAAA,CAAA,SAAAC,EAAAH,EAAA,kBAAA,EAAA,SAAAN,EAEIL,EAAC,CAAA,QAAA,YACS,MAAAe,EAAAJ,CAAA,EACyB,MAAAK,EAAAJ,CAAA,EACd,GAAAR,CACf,CAAA,CAAA,CAAA,EAQZY,EAAAJ,GAAAA,IAAA,KAAA,QAAA,OAEAK,EAAA,YAEOF,EAAAJ,GAAA,CAGL,MAAAO,EAAA,EAFAvB,EAAA,IAAA,KAAAgB,CAAA,EAAAM,EAIA,OAAAE,EAAA,EAAA,EAAAD,CAAA,CACF","x_google_ignoreList":[0]}