{"version":3,"file":"clamp-933847fa.js","sources":["../../node_modules/ramda/es/clamp.js"],"sourcesContent":["import _curry3 from \"./internal/_curry3.js\";\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\n\nvar clamp =\n/*#__PURE__*/\n_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n\n  return value < min ? min : value > max ? max : value;\n});\n\nexport default clamp;"],"names":["clamp","_curry3","min","max","value","clamp$1"],"mappings":"0CAsBA,IAAIA,EAEJC,EAAQ,SAAeC,EAAKC,EAAKC,EAAO,CACtC,GAAIF,EAAMC,EACR,MAAM,IAAI,MAAM,4DAA4D,EAG9E,OAAOC,EAAQF,EAAMA,EAAME,EAAQD,EAAMA,EAAMC,CACjD,CAAC,EAED,MAAAC,EAAeL","x_google_ignoreList":[0]}