{"version":3,"file":"index-acaba559.js","sources":["../../src/components/alternative-header/styles.ts","../../src/components/alternative-header/AlternativeHeader.tsx"],"sourcesContent":["import { SxStyleProp } from 'rebass';\n\nexport const tab = (active: boolean) => ({\n  cursor: 'pointer',\n\n  textAlign: 'center',\n\n  px: '8px',\n  mx: '2px',\n\n  transition: 'border-color .4s',\n\n  ':after': {\n    width: '110%',\n    ml: '-5%',\n    content: '\"\"',\n    display: 'block',\n    borderBottom: '2px solid',\n    borderBottomColor: active ? 'primary' : 'transparent',\n    transition: 'border-bottom-color .3s',\n  },\n\n  ':hover:after': !active && {\n    borderBottom: '2px solid',\n    borderBottomColor: 'grayShade1',\n  },\n});\n\nexport const wrapper = (topContent: boolean) =>\n  ({\n    p: topContent ? '20px' : '0px 20px 0px 10px',\n    pb: 0,\n\n    position: 'relative',\n\n    bg: 'white',\n\n    flexDirection: 'column',\n\n    boxShadow: topContent ? '0 -5px 0 grayShade3' : '',\n\n    zIndex: 25,\n\n    width: '100%',\n  } as SxStyleProp);\n\nexport const base = {\n  position: 'absolute',\n  height: '1px',\n  backgroundColor: 'grayShade2',\n  width: '100%',\n  bottom: '0px',\n  zIndex: -1,\n};\n","import React, { FC, useMemo } from 'react';\nimport { Box, BoxProps, Flex } from 'rebass';\nimport Value from '../typography/value';\nimport * as S from './styles';\n\nexport interface Tab {\n  /** Title for the tab */\n  title: string;\n  /** Additional content, e.g. counter */\n  altContent?: React.ReactElement | null;\n  /** Whether tab is active or not */\n  isActive: boolean;\n  /** Handler called when tab is clicked */\n  onClick: () => void;\n}\n\nexport interface Props extends Omit<BoxProps, 'css'> {\n  /** Title for the tabs bar */\n  title?: string;\n  /** A list of tabs, defined by `ALternativeHeaderTab` interface */\n  tabs: Tab[];\n  /** Whether to show a line under the tabs menu */\n  withBase?: boolean;\n}\n\nexport const AlternativeHeader: FC<Props> = ({\n  title,\n  tabs,\n  withBase = false,\n  sx,\n  ...props\n}: Props) => {\n  const activeTabIndex = useMemo(() => {\n    const index = tabs.findIndex(({ isActive }) => isActive);\n\n    return index < 0 ? 0 : index;\n  }, [tabs]);\n\n  return (\n    <Flex sx={{ ...S.wrapper(Boolean(title)), ...sx }} {...props}>\n      <Flex justifyContent=\"space-between\" width=\"100%\" height=\"fit-content\">\n        <Value fontSize=\"20px\" fontFamily=\"Inter\" fontWeight=\"bold\">\n          {title && title}\n        </Value>\n      </Flex>\n\n      <Flex\n        width=\"100%\"\n        mt=\"25px\"\n        justifyContent=\"space-between\"\n        sx={{ position: 'relative' }}\n      >\n        {withBase && <Flex sx={S.base} />}\n        <Flex>\n          {tabs.map((tab, index) => (\n            <Box\n              onClick={tab.onClick}\n              key={tab.title}\n              sx={S.tab(activeTabIndex === index)}\n            >\n              <Flex alignItems=\"baseline\" pb=\"10px\">\n                <Value fontFamily=\"Inter\">{tab.title}</Value>\n                {React.isValidElement(tab.altContent) && (\n                  <Flex ml=\"10px\">\n                    <Flex\n                      as=\"span\"\n                      variant=\"light\"\n                      alignItems=\"center\"\n                      tx=\"variants.badges.primary\"\n                      justifyContent=\"center\"\n                      px=\"4px\"\n                      py=\"2px\"\n                      sx={{ borderRadius: '1px' }}\n                    >\n                      {tab.altContent}\n                    </Flex>\n                  </Flex>\n                )}\n              </Flex>\n            </Box>\n          ))}\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n};\n"],"names":["tab","active","wrapper","topContent","base","AlternativeHeader","title","tabs","withBase","sx","props","activeTabIndex","useMemo","index","isActive","jsxs","Flex","S.wrapper","jsx","Value","S.base","Box","S.tab","React"],"mappings":"wJAEa,MAAAA,EAAOC,IAAqB,CACvC,OAAQ,UAER,UAAW,SAEX,GAAI,MACJ,GAAI,MAEJ,WAAY,mBAEZ,SAAU,CACR,MAAO,OACP,GAAI,MACJ,QAAS,KACT,QAAS,QACT,aAAc,YACd,kBAAmBA,EAAS,UAAY,cACxC,WAAY,yBACd,EAEA,eAAgB,CAACA,GAAU,CACzB,aAAc,YACd,kBAAmB,YACrB,CACF,GAEaC,EAAWC,IACrB,CACC,EAAGA,EAAa,OAAS,oBACzB,GAAI,EAEJ,SAAU,WAEV,GAAI,QAEJ,cAAe,SAEf,UAAWA,EAAa,sBAAwB,GAEhD,OAAQ,GAER,MAAO,MACT,GAEWC,EAAO,CAClB,SAAU,WACV,OAAQ,MACR,gBAAiB,aACjB,MAAO,OACP,OAAQ,MACR,OAAQ,EACV,EC5BOC,EAAA,CAAA,CAAsC,MAAAC,EAC3C,KAAAC,EACA,SAAAC,EAAA,GACW,GAAAC,EACX,GAAAC,CAEF,IAAA,CACE,MAAAC,EAAAC,EAAAA,QAAA,IAAA,CACE,MAAAC,EAAAN,EAAA,UAAA,CAAA,CAAA,SAAAO,CAAA,IAAAA,CAAA,EAEA,OAAAD,EAAA,EAAA,EAAAA,CAAuB,EAAA,CAAAN,CAAA,CAAA,EAGzB,OAAAQ,EAAAC,EAAA,CAAA,GAAA,CAAA,GAAAC,EAAA,EAAAX,CAAA,EAAA,GAAAG,CAAA,EAAA,GAAAC,EAAA,SAAA,CAEIQ,EAAAF,EAAA,CAAA,eAAA,gBAAA,MAAA,OAAA,OAAA,cAAA,SAAAE,EAAAC,EAAA,CAAA,SAAA,OAAA,WAAA,QAAA,WAAA,OAAA,SAAAb,GAAAA,CAAA,CAAA,EAAA,EAIAS,EAEAC,EAAC,CAAA,MAAA,OACO,GAAA,OACH,eAAA,gBACY,GAAA,CAAA,SAAA,UAAA,EACY,SAAA,CAE1BR,GAAAU,EAAAF,EAAA,CAAA,GAAAI,CAAA,CAAA,EAA8BF,EAAAF,EAAA,CAAA,SAAAT,EAAA,IAAA,CAAAP,EAAAa,IAAAK,EAG3BG,EAAC,CAAA,QAAArB,EAAA,QACc,GAAAsB,EAAAX,IAAAE,CAAA,EAEqB,SAAAE,EAAAC,EAAA,CAAA,WAAA,WAAA,GAAA,OAAA,SAAA,CAGhCE,EAAAC,EAAA,CAAA,WAAA,QAAA,SAAAnB,EAAA,MAAA,EAAqCuB,EAAA,eAAAvB,EAAA,UAAA,GAAAkB,EAAAF,EAAA,CAAA,GAAA,OAAA,SAAAE,EAGjCF,EAAC,CAAA,GAAA,OACI,QAAA,QACK,WAAA,SACG,GAAA,0BACR,eAAA,SACY,GAAA,MACZ,GAAA,MACA,GAAA,CAAA,aAAA,KAAA,EACuB,SAAAhB,EAAA,UAErB,CAAA,EAAA,CAET,EAAA,CAEJ,EAAAA,EAAA,KArBS,CAAA,EAAA,CAwBf,CAAA,CAAA,CACF,CAAA,CAAA,CAGN"}