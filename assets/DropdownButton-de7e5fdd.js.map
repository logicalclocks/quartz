{"version":3,"file":"DropdownButton-de7e5fdd.js","sources":["../../src/components/dropdown-button/styles.ts","../../src/components/dropdown-button/DropdownButton.tsx"],"sourcesContent":["export default {\n  container: {\n    position: 'relative',\n    cursor: 'pointer',\n    marginTop: '-2px',\n    width: 'fit-content',\n    height: 'fit-content',\n    background: 'white',\n  },\n  dropdown: (height: number | undefined, alignLeft: boolean) => ({\n    position: 'absolute',\n    top: `${height}px`,\n    zIndex: 5,\n    ...(alignLeft\n      ? {\n          right: '0px',\n        }\n      : {\n          left: '0px',\n        }),\n  }),\n};\n","import React, { useMemo, useRef } from 'react';\nimport { Flex, FlexProps } from 'rebass';\nimport * as R from 'ramda';\n\nimport styles from './styles';\nimport useDropdown from '../../utils/useDropdown';\nimport Dropdown, { DropdownProps } from '../dropdown';\nimport { DropdownItem } from '../dropdown/types';\n\ntype RenderDropdownItems = ({\n  onClose,\n}: {\n  onClose: () => void;\n}) => DropdownProps['items'];\n\nexport interface Props extends Omit<FlexProps, 'css'> {\n  /** To align dropdown on the left or right, the default is right alignment\n   * TODO: in the future we might need excact place of opening dropdown similar to tooltip\n   */\n  alignLeft?: boolean;\n  /** Setting custom style for container when dropdown is open' */\n  containerOpenSx?: FlexProps['sx'];\n  /** Setting custom style for dropdown */\n  dropdownSx?: DropdownProps['sx'];\n  /** Dropwdown items either could be an Array, in this case dropdown will be closed after any item clicked\n   *  in order to handle closing of dropdown manually you have to pass a callback function which accepts the `onClose` handler function\n   */\n  items: DropdownProps['items'] | RenderDropdownItems;\n  /** To Render custom component as dropdown's button */\n  renderButton: ({\n    onClick,\n    isOpen,\n  }: {\n    onClick: () => void;\n    isOpen: boolean;\n  }) => React.ReactNode;\n}\n\nexport const DropdownButton: React.FC<Props> = ({\n  alignLeft = false,\n  containerOpenSx = {},\n  dropdownSx = {},\n  items,\n  renderButton,\n  sx = {},\n  ...restProps\n}) => {\n  const [isOpen, handleToggle, handleClickOutside] = useDropdown();\n  const containerRef = useRef<HTMLElement>();\n  const dropdownItems = useMemo(\n    () =>\n      R.equals(R.type(items), 'Array')\n        ? /** if the items is array then close dropdown after clicking each dropdown item */\n          (items as DropdownItem[]).map((item) => ({\n            ...item,\n            onClick: () => {\n              item.onClick(item);\n              handleToggle();\n            },\n          }))\n        : (items as RenderDropdownItems)({ onClose: handleToggle }),\n    [items, handleToggle],\n  );\n\n  return (\n    <Flex\n      ref={containerRef}\n      sx={R.mergeDeepRight(styles.container, {\n        ...sx,\n        ...(isOpen ? containerOpenSx : {}),\n      })}\n      {...restProps}\n    >\n      {renderButton({ isOpen, onClick: handleToggle })}\n      <Dropdown\n        isOpen={isOpen}\n        onClickOutside={handleClickOutside}\n        sx={R.mergeDeepRight(\n          styles.dropdown(containerRef?.current?.offsetHeight, alignLeft),\n          { ...dropdownSx },\n        )}\n        items={dropdownItems}\n      />\n    </Flex>\n  );\n};\n"],"names":["styles","height","alignLeft","DropdownButton","containerOpenSx","dropdownSx","items","renderButton","sx","restProps","isOpen","handleToggle","handleClickOutside","useDropdown","containerRef","useRef","dropdownItems","useMemo","R.equals","R.type","item","jsxs","Flex","R.mergeDeepRight","jsx","Dropdown","_a"],"mappings":"0TAAA,MAAeA,EAAA,CACb,UAAW,CACT,SAAU,WACV,OAAQ,UACR,UAAW,OACX,MAAO,cACP,OAAQ,cACR,WAAY,OACd,EACA,SAAU,CAACC,EAA4BC,KAAwB,CAC7D,SAAU,WACV,IAAK,GAAGD,MACR,OAAQ,EACR,GAAIC,EACA,CACE,MAAO,KAAA,EAET,CACE,KAAM,KACR,CAAA,EAER,ECiBOC,EAAA,CAAA,CAAyC,UAAAD,EAAA,GAClC,gBAAAE,EAAA,CAAA,EACO,WAAAC,EAAA,CAAA,EACL,MAAAC,EACd,aAAAC,EACA,GAAAC,EAAA,CAAA,EACM,GAAAC,CAER,IAAA,OACE,KAAA,CAAAC,EAAAC,EAAAC,CAAA,EAAAC,EAAA,EACAC,EAAAC,EAAAA,SACAC,EAAAC,EAAA,QAAsB,IAAAC,EAAAC,EAAAb,CAAA,EAAA,OAAA,EAEaA,EAAA,IAAAc,IAAA,CAEc,GAAAA,EACpC,QAAA,IAAA,CAEDA,EAAA,QAAAA,CAAA,EACAT,GAAa,CACf,EAAA,EACAL,EAAA,CAAA,QAAAK,EAAA,EACsD,CAAAL,EAAAK,CAAA,CAC1C,EAGtB,OAAAU,EACEC,EAAC,CAAA,IAAAR,EACM,GAAAS,EAAAvB,EAAA,UAAA,CACkC,GAAAQ,EAClC,GAAAE,EAAAN,EAAA,CAAA,CAC6B,CAAA,EACjC,GAAAK,EACG,SAAA,CAEHF,EAAA,CAAA,OAAAG,EAAA,QAAAC,CAAA,CAAA,EAA8Ca,EAC/CC,EAAC,CAAA,OAAAf,EACC,eAAAE,EACgB,GAAAW,EACVvB,EAAA,UAAA0B,EAAAZ,GAAA,YAAAA,EAAA,UAAA,YAAAY,EAAA,aAAAxB,CAAA,EAC0D,CAAA,GAAAG,CAAA,CAC9C,EAClB,MAAAW,CACO,CAAA,CACT,CAAA,CAAA,CAGN;"}