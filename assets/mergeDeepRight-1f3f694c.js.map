{"version":3,"file":"mergeDeepRight-1f3f694c.js","sources":["../../node_modules/ramda/es/mergeDeepRight.js"],"sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\nimport mergeDeepWithKey from \"./mergeDeepWithKey.js\";\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\n\nvar mergeDeepRight =\n/*#__PURE__*/\n_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\n\nexport default mergeDeepRight;"],"names":["mergeDeepRight","_curry2","lObj","rObj","mergeDeepWithKey","k","lVal","rVal","mergeDeepRight$1"],"mappings":"6FAwBA,IAAIA,EAEJC,EAAQ,SAAwBC,EAAMC,EAAM,CAC1C,OAAOC,EAAiB,SAAUC,EAAGC,EAAMC,EAAM,CAC/C,OAAOA,CACX,EAAKL,EAAMC,CAAI,CACf,CAAC,EAED,MAAAK,EAAeR","x_google_ignoreList":[0]}