{"version":3,"file":"stories-39556d9e.js","sources":["../../src/components/editableSelect/stories.tsx"],"sourcesContent":["import { action } from '@storybook/addon-actions';\nimport { expect } from '@storybook/jest';\nimport { Meta, StoryObj } from '@storybook/react';\n\nimport { userEvent, within } from '@storybook/testing-library';\nimport { useState } from 'react';\nimport { Box } from '../../index';\n\nimport EditableSelect from './index';\n\nconst meta: Meta<typeof EditableSelect> = {\n  title: 'EditableSelect',\n  component: EditableSelect,\n  argTypes: {\n    value: {\n      description: 'Array of strings',\n      control: { type: 'array' },\n    },\n    options: {\n      description: 'array of strings',\n      control: { type: 'array' },\n    },\n    label: {\n      control: { type: 'text' },\n    },\n    placeholder: {\n      description: 'string',\n      control: { type: 'text' },\n    },\n    noDataMessage: {\n      description: 'string',\n      control: { type: 'text' },\n    },\n    disabled: {\n      control: { type: 'boolean' },\n    },\n    isMulti: {\n      control: { type: 'boolean' },\n    },\n    preventAdding: {\n      description:\n        'Turns off ability to create new options, the \"add <>\" thing',\n      control: { type: 'boolean' },\n    },\n    labelAction: {\n      description: 'React Component',\n    },\n    variant: {\n      control: { type: 'select' },\n      description: 'Component can look different with different variants',\n      options: ['primary', 'white'],\n    },\n  },\n};\nexport default meta;\n\nconst options = ['integer', 'string', 'boolean', 'float', 'bigInt'];\n\nexport const Multi: StoryObj<typeof EditableSelect> = {\n  args: {\n    label: 'Label',\n    labelAction: '(optional)',\n    placeholder: 'placeholder',\n    noDataMessage: 'no options',\n    disabled: false,\n    isMulti: true,\n    value: ['integer', 'string'],\n    options,\n  },\n  render: ({ value: initialValue, options, ...props }) => {\n    const [value, setValue] = useState<string[]>(initialValue);\n\n    const handleChange = (data: string[]) => {\n      action('onChange')(data);\n      setValue(data);\n    };\n\n    return (\n      <Box minHeight=\"400px\" width=\"600px\">\n        <EditableSelect\n          {...props}\n          value={value}\n          options={options}\n          onChange={handleChange}\n        />\n      </Box>\n    );\n  },\n  play: async ({ canvasElement, step }) => {\n    const canvas = within(canvasElement);\n\n    await step('Ensure default values are used for first render', () => {\n      expect(canvas.getByText('integer')).toBeDefined();\n      expect(canvas.getByText('string')).toBeDefined();\n    });\n\n    await step('Clicking on label opens the menu', async () => {\n      await userEvent.click(document.querySelector('label')!);\n      expect(canvas.getByText('bigInt')).toBeVisible(); // last element\n    });\n\n    await step(\n      'Select all options, run out of them, see *noDataMessage*',\n      async () => {\n        // select all remaining options\n        await userEvent.keyboard(\n          '[ArrowDown][Enter][ArrowDown][Enter][ArrowDown][Enter]',\n        );\n        await userEvent.keyboard('[ArrowDown]');\n        expect(canvas.getByText('no options')).toBeVisible();\n      },\n    );\n\n    await step('Remove last two items, see them gone', async () => {\n      await userEvent.keyboard('[Backspace][Backspace]');\n      await userEvent.keyboard('[Escape][Tab]');\n      expect(canvas.queryByText('boolean')).toBeNull();\n      expect(canvas.queryByText('bigInt')).toBeNull();\n    });\n\n    await step(\n      'Add a new option, see \"add <new option>\", then see it added',\n      async () => {\n        await userEvent.click(document.querySelector('label')!);\n\n        await userEvent.keyboard('New option');\n        expect(canvas.getByText('add')).toBeVisible();\n        expect(canvas.getByText('New option')).toBeVisible();\n\n        await userEvent.keyboard('[Enter]');\n        expect(canvas.queryByText('add')).toBeNull();\n        expect(canvas.getByText('New option')).toBeVisible();\n      },\n    );\n  },\n};\n\nexport const Single: StoryObj<typeof EditableSelect> = {\n  args: {\n    label: 'Label',\n    labelAction: '(optional)',\n    placeholder: 'placeholder',\n    noDataMessage: 'no options',\n    disabled: false,\n    isMulti: false,\n    value: ['integer'],\n    options,\n  },\n  render: ({ value: initialValue, options, ...props }) => {\n    const [value, setValue] = useState<string[]>(initialValue);\n\n    const handleChange = (data: string[]) => {\n      action('onChange')(data);\n      setValue(data);\n    };\n\n    return (\n      <Box minHeight=\"400px\" width=\"600px\">\n        <EditableSelect\n          // isOpen\n          {...props}\n          value={value}\n          options={options}\n          onChange={handleChange}\n        />\n      </Box>\n    );\n  },\n  play: async ({ canvasElement, step }) => {\n    const canvas = within(canvasElement);\n\n    await step('Ensure \"integer\" is selected by value, from props', () => {\n      expect(canvas.getByText('integer')).toBeVisible();\n    });\n\n    await step('Clicking on label opens the menu', async () => {\n      await userEvent.click(document.querySelector('label')!);\n      expect(canvas.getByText('bigInt')).toBeVisible(); // last element\n    });\n\n    await step('Choose third option, see it being chosen', async () => {\n      await userEvent.keyboard('[ArrowDown][ArrowDown][Enter]');\n      expect(canvas.getByText('boolean')).toBeVisible();\n    });\n\n    await step(\n      'Add a new option, see \"add <new option>\", then see it added',\n      async () => {\n        await userEvent.keyboard('New option');\n        expect(canvas.getByText('add')).toBeVisible();\n        expect(canvas.getByText('New option')).toBeVisible();\n\n        await userEvent.keyboard('[Enter]');\n        expect(canvas.queryByText('add')).toBeNull();\n        expect(canvas.getByText('New option')).toBeVisible();\n      },\n    );\n  },\n};\n"],"names":["meta","EditableSelect","options","Multi","initialValue","props","value","setValue","useState","handleChange","data","action","jsx","Box","canvasElement","step","canvas","within","expect","userEvent","Single"],"mappings":"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"}