{"version":3,"file":"radio-group-991f0aea.js","sources":["../../src/utils/randomString.ts","../../src/components/radio/radio-group.tsx"],"sourcesContent":["const randomString = () => Math.random().toString(32);\n\nexport default randomString;\n","import React, { useCallback } from 'react';\nimport { Flex } from 'rebass';\n\n// Components\nimport Radio, { RadioProps } from './index';\n// Utils\nimport randomString from '../../utils/randomString';\n\nexport type RadioGroupOption<T = string> = RadioProps & {\n  key: T;\n  text: string;\n};\nexport interface RadioGroupProps<T = string>\n  extends Omit<RadioProps, 'label' | 'onChange' | 'options' | 'value'> {\n  value: T;\n  options: string[] | RadioGroupOption<T>[];\n  onChange: (value: T) => void;\n  /**\n   * @deprecated [#1] since version 2.6.0 [#2].\n   * [3#] will be deleted in version 3.0.\n   * [#4] In case you need similar behavior add tooltip prop through options\n   */\n  tooltipMessages?: {\n    [key: string]: string;\n  };\n  flexDirection?: 'row' | 'column' | null;\n}\n\nconst RadioGroup: <T = string>(props: RadioGroupProps<T>) => JSX.Element = ({\n  options,\n  value,\n  onChange,\n  tooltipMessages = {},\n  flexDirection = 'column',\n  ...props\n}) => {\n  const handleChange = useCallback(\n    (newValue: typeof value) => () => {\n      onChange(newValue);\n    },\n    [onChange],\n  );\n\n  const name = randomString();\n\n  const mappedOptions = options.map((val) =>\n    typeof val === 'string'\n      ? {\n          key: val as unknown as typeof value,\n          text: val,\n          additionalText: '',\n        }\n      : val,\n  );\n\n  return (\n    <Flex flexDirection={flexDirection}>\n      {mappedOptions?.map(({ key, text, ...restProps }) => (\n        <Radio\n          {...props}\n          key={`${key}`}\n          mt={flexDirection === 'column' ? 2 : 'initial'}\n          mr={flexDirection === 'row' ? '20px' : 'initial'}\n          checked={value === key}\n          label={text}\n          name={name}\n          onChange={handleChange(key)}\n          tooltip={tooltipMessages[`${key}`]}\n          tooltipPosition={flexDirection === 'column' ? 'right' : 'bottom'}\n          {...restProps}\n        />\n      ))}\n    </Flex>\n  );\n};\n\nexport default RadioGroup;\n"],"names":["randomString","RadioGroup","options","value","onChange","tooltipMessages","flexDirection","props","handleChange","useCallback","newValue","name","mappedOptions","val","jsx","Flex","key","text","restProps","createElement","Radio"],"mappings":"mIAAA,MAAMA,EAAe,IAAM,KAAK,OAAO,EAAE,SAAS,EAAE,EC4B9CC,EAAqE,CAAC,CAC1E,QAAAC,EACA,MAAAC,EACA,SAAAC,EACA,gBAAAC,EAAkB,CAAC,EACnB,cAAAC,EAAgB,SAChB,GAAGC,CACL,IAAM,CACJ,MAAMC,EAAeC,EAAA,YAClBC,GAA2B,IAAM,CAChCN,EAASM,CAAQ,CACnB,EACA,CAACN,CAAQ,CAAA,EAGLO,EAAOX,IAEPY,EAAgBV,EAAQ,IAAKW,GACjC,OAAOA,GAAQ,SACX,CACE,IAAKA,EACL,KAAMA,EACN,eAAgB,EAAA,EAElBA,CAAA,EAIJ,OAAAC,EAACC,EAAK,CAAA,cAAAT,EACH,SAAeM,GAAA,YAAAA,EAAA,IAAI,CAAC,CAAE,IAAAI,EAAK,KAAAC,EAAM,GAAGC,CACnC,IAAAC,EAAA,cAACC,EAAA,CACE,GAAGb,EACJ,IAAK,GAAGS,IACR,GAAIV,IAAkB,SAAW,EAAI,UACrC,GAAIA,IAAkB,MAAQ,OAAS,UACvC,QAASH,IAAUa,EACnB,MAAOC,EACP,KAAAN,EACA,SAAUH,EAAaQ,CAAG,EAC1B,QAASX,EAAgB,GAAGW,GAAK,EACjC,gBAAiBV,IAAkB,SAAW,QAAU,SACvD,GAAGY,CAAA,CAEP,EACH,CAAA,CAEJ"}