import{a as o,c as g,j as e,B as s}from"./index.esm-d48b4efe.js";import{r as b}from"./index-8db94870.js";import{R as x,l as q,d as V}from"./index-23178ec5.js";import"./index-0330c98f.js";import{I as S}from"./index-38fb6861.js";import{L as _}from"./index-b07c14d7.js";import{T as w}from"./index-b3448287.js";import{L as C}from"./labeling-12ecbbe1.js";import{G as I}from"./GetIcon-9cceefbc.js";import{I as N}from"./list-ae21c2ea.js";const F=b.forwardRef(({label:t="",value:u,mode:d,width:r="100%",height:p="100%",labelAction:n,optional:l,tooltipInfo:a,labelProps:m,onChange:c,readOnly:f=!1,info:i,intent:h="default",...v})=>{const y=(n||a||l)&&o(g,{children:[n,l&&e(C,{ml:"8px",bold:!0,gray:!0,children:"optional"}),a&&e(w,{mainText:a,children:e(I,{mt:"3px",ml:"3px",size:"xs",icon:N.info_block})})]});return o(s,{width:r,tx:"inputs",...v,children:[e(_,{action:y,text:t,width:r,...m,mb:"8px",children:e(s,{sx:{"*":{fontFamily:"inherit"}},children:e(x,{value:u,basicSetup:{autocompletion:!1,lineNumbers:!0,foldGutter:!1},extensions:[q(d)].filter(Boolean),theme:V,onChange:c,readOnly:f,height:p})})}),i&&e(S,{intent:h,children:i})]})});try{codeinput.displayName="codeinput",codeinput.__docgenInfo={description:"",displayName:"codeinput",props:{label:{defaultValue:{value:""},description:"",name:"label",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string"}},mode:{defaultValue:null,description:"",name:"mode",required:!0,type:{name:"enum",value:[{value:'"json"'},{value:'"javascript"'},{value:'"yaml"'},{value:'"python"'},{value:'"sql"'}]}},width:{defaultValue:{value:"100%"},description:`The width utility parses a component's \`width\` prop and converts it into a CSS width declaration.

- Numbers from 0-1 are converted to percentage widths.
- Numbers greater than 1 are converted to pixel values.
- String values are passed as raw CSS values.
- And arrays are converted to responsive width styles.`,name:"width",required:!1,type:{name:"string | number"}},height:{defaultValue:{value:"100%"},description:`The height CSS property specifies the height of an element. By default, the property defines the height of the
content area. If box-sizing is set to border-box, however, it instead determines the height of the border area.

[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/height)`,name:"height",required:!1,type:{name:"string"}},labelAction:{defaultValue:null,description:"",name:"labelAction",required:!1,type:{name:"ReactNode"}},optional:{defaultValue:null,description:"",name:"optional",required:!1,type:{name:"boolean"}},tooltipInfo:{defaultValue:null,description:"",name:"tooltipInfo",required:!1,type:{name:"string"}},labelProps:{defaultValue:null,description:"",name:"labelProps",required:!1,type:{name:'Omit<LabelProps, "action" | "children" | "text">'}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(value: string) => void"}},readOnly:{defaultValue:{value:"false"},description:"",name:"readOnly",required:!1,type:{name:"boolean"}},info:{defaultValue:null,description:"",name:"info",required:!1,type:{name:"string"}},intent:{defaultValue:{value:"default"},description:"",name:"intent",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"error"'}]}}}}}catch{}export{F as C};
//# sourceMappingURL=index-47f005f3.js.map
